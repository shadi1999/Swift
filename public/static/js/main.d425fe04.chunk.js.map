{"version":3,"sources":["default-monochrome.svg","actions/stream.js","utils/setAuthToken.js","actions/alert.js","actions/types.js","Config.js","actions/auth.js","components/auth/Login.js","components/layout/Alert.js","components/auth/RegisterTutor.js","components/auth/RegisterStudent.js","components/ErrotNotFound.js","actions/adimnActions.js","components/dashboard/admin/TutorsList.js","components/dashboard/admin/AddAdmin.js","components/dashboard/admin/AdminSidebar.js","components/dashboard/admin/StudentsList.js","components/dashboard/admin/EditTutor.js","components/dashboard/admin/EditStudent.js","components/dashboard/HomeDashboard.js","components/dashboard/admin/AddClassroom.js","components/dashboard/admin/GetClassrooms.js","components/dashboard/admin/EditClassroom.js","components/dashboard/admin/AdminDashboard.js","components/dashboard/tutor/TutorSidebar.js","actions/tutorActions.js","components/dashboard/tutor/MyLectures.js","components/dashboard/tutor/MyClassrooms.js","components/dashboard/tutor/MyClassroomInfo.js","components/dashboard/tutor/TutorDashboard.js","components/dashboard/student/StudentSidebar.js","actions/studentActions.js","components/dashboard/student/MyClassrooms.js","components/dashboard/student/StudentDashboard.js","components/dashboard/MainDashboard.js","components/classroom/chat/ChatMessage.js","utils/webrtc_adaptor.js","actions/lecture.js","components/classroom/chat/ChatContainer.js","components/classroom/Stream.js","components/classroom/VideoPlayer.js","components/classroom/Slides.js","components/classroom/Classroom.js","components/classroom/TutorClassroom.js","components/auth/LoginAsGuest.js","components/Home.js","components/layout/AdminProfile.js","components/layout/TutorProfile.js","components/layout/StudentProfile.js","components/layout/Profile.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/adminReducer.js","reducers/lecture.js","reducers/stream.js","reducers/tutorReducer.js","reducers/studentReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","webRTCAdaptor","setAuthToken","token","axios","defaults","headers","common","localStorage","setItem","removeItem","setAlert","msg","alertType","timeout","dispatch","id","v4","type","payload","setTimeout","Config","URL","Server","Client","loadUser","a","get","res","data","Content","Layout","connect","Sider","state","isAuthenticated","auth","user","login","email","password","body","JSON","stringify","post","errors","response","error","tailLayout","wrapperCol","offset","span","Form","useForm","to","labelCol","name","initialValues","remember","onFinish","values","Item","label","rules","required","message","Password","valuePropName","htmlType","className","href","alerts","alert","length","map","key","showIcon","registerTutor","config","console","log","form","password2","Private","record","prefix","style","color","placeholder","registerStudent","ErrorNotFound","status","title","subTitle","extra","editTutor","tutor","history","redirectPath","getState","_id","put","tutors","admin","filter","t","push","deleteTutor","delete","editStudent","student","students","deleteStudent","getClassrooms","classrooms","loading","getTutors","useEffect","avatar","active","itemLayout","dataSource","renderItem","item","actions","Meta","icon","addAdmin","useHistory","indicator","LoadingOutlined","fontSize","spin","size","spinning","AdminSidebar","theme","mode","VideoCameraAddOutlined","getStudents","useParams","find","elm","setFieldsValue","okText","cancelText","onConfirm","okType","QuestionCircleOutlined","danger","tag","kind","addClassroom","grid","gutter","column","editClassroom","classroom","newid","deleteClassroom","newId","undefined","EditFilled","DeleteFilled","AdminDashboard","path","component","EditTutor","TutorsList","AddAdmin","EditStudent","StudentsList","AddClassroom","EditClassroom","GetClassrooms","HomeDashboard","TutorSidebar","HomeOutlined","VideoCameraOutlined","lectures","getLectures","idLectures","lecture","pastLectures","startedOn","endedOn","attendance","duration","addStudentToClassroom","getStudentsFromClassroom","deleteStudentFromClassroom","form2","e","getClassroom","disabled","defaultChecked","private","recordLectures","description","TutorDashboard","MyClassroomInfo","MyLectures","MyClassrooms","StudentSidebar","StudentDashboard","MainDashboard","userKind","ChatMessage","senderFirstName","backgroundColor","verticalAlign","src","filename","exec","target","DownloadOutlined","m","WebRTCAdaptor","PeerStats","streamId","this","totalBytesReceivedCount","totalBytesSent","packetsLost","fractionLost","startTime","lastBytesReceived","lastBytesSent","currentTimestamp","lastTime","timerId","firstByteSentCount","firstBytesReceivedCount","Math","floor","totalBytesSentCount","timestamp","bytesReceived","bytesSent","thiz","peerconnection_config","sdp_constraints","remotePeerConnection","Array","remotePeerConnectionStats","remoteDescriptionSet","iceCandidateList","webSocketAdaptor","roomName","videoTrackSender","audioTrackSender","playStreamId","micGainNode","localStream","bandwidth","isMultiPeer","multiPeerStreamId","isPlayMode","debug","publishMode","candidateTypes","desktopStream","camera_location","camera_margin","camera_percent","hasOwnProperty","localVideo","document","getElementById","localVideoId","remoteVideo","remoteVideoId","mediaConstraints","video","window","callbackError","navigator","mediaDevices","switchDesktopwithCameraSource","stream","audioStream","onEndedCallback","getUserMedia","audio","then","cameraStream","canvas","createElement","canvasContext","getContext","screenVideo","srcObject","play","cameraVideo","canvasStream","captureStream","addTrack","getAudioTracks","gotStream","switchDesktopSource","onended","setInterval","width","videoWidth","height","videoHeight","drawImage","positionY","cameraWidth","cameraHeight","positionX","catch","getUserMediaDetail","audioConstraint","audioTrack","removeTrack","getVideoTracks","event","callback","switchVideoSource","media_audio_constraint","getDisplayMedia","openStream","switchVideoCapture","closeStream","forEach","track","stop","checkBrowserScreenShareSupported","addEventListener","removeEventListener","postMessage","isConnected","WebSocketAdaptor","mandatory","micStream","audioContext","AudioContext","desktopSoundGainNode","createGain","gain","value","audioDestionation","createMediaStreamDestination","createMediaStreamSource","wsConn","WebSocket","websocket_url","connected","pingTimerId","clearPingTimer","clearInterval","close","onopen","send","command","text","readyState","onmessage","obj","parse","startPublishing","candidate","takeCandidate","takeConfiguration","sdp","closePeerConnection","definition","join","onerror","onclose","enableMicInMixedAudio","enable","publish","jsCmd","joinRoom","room","roomId","enableTracks","trackList","multiPeer","leaveFromRoom","leave","getStreamInfo","enableTrack","mainTrackId","trackId","enabled","getTracks","switchDesktopCapture","switchDesktopCaptureWithCamera","arrangeStreams","stopDesktop","videoTrack","getSenders","s","replaceTrack","result","onTrack","streams","dataObj","iceCandidateReceived","includes","protocol","sdpMLineIndex","sdpMid","initDataChannel","dataChannel","initPeerConnection","closedStreamId","RTCPeerConnection","addStream","onicecandidate","ontrack","createDataChannel","ordered","ondatachannel","ev","channel","oniceconnectionstatechange","iceConnectionState","changeBandwidth","signalingState","playStreamIndex","indexOf","splice","signallingState","gotDescription","configuration","setLocalDescription","responose","turnOffLocalCamera","turnOnLocalCamera","muteLocalMic","unmuteLocalMic","idOfStream","typeOfConfiguration","conf","setRemoteDescription","RTCSessionDescription","i","addIceCandidate","createAnswer","toString","idOfTheStream","tmpLabel","tmpCandidate","RTCIceCandidate","createOffer","getVideoSender","videoSender","senders","errorDefinition","parameters","getParameters","encodings","maxBitrate","setParameters","Promise","reject","getStats","stats","currentTime","totalBytesReceived","enableStats","closeWebSocket","peerMessage","sendData","socket","classroomId","stopPublishing","initSocket","io","on","emit","hasStarted","slideUrl","onlineUsers","assignColors","url","pageNumber","playToken","assignColor","publishToken","currentStreamerId","newStreamer","isSharing","users","deletedIndexes","entries","some","other","colorsCopy","colors","pop","random","sameName","joinClassroom","allowStudent","userId","messages","sendMessage","loadMessages","M","useState","setMsg","props","action","onChange","info","file","fileList","mimetype","startsWith","lectureId","destination","success","btns","onClick","SendOutlined","UploadOutlined","u","sender","addonAfter","streamState","initWebrtc","websocketURL","location","hostname","mediaServerApp","OfferToReceiveAudio","OfferToReceiveVideo","averageOutgoingBitrate","currentOutgoingBitrate","errorMessage","startPublishingAction","toggleMic","micMuted","switchMode","newMode","disallowStudent","Group","defaultValue","Button","DesktopOutlined","AudioOutlined","PauseCircleOutlined","webrtcConnected","PlayCircleOutlined","shape","AudioMutedOutlined","AudioFilled","SwapOutlined","VideoPlayer","nextProps","nextState","changed","source","change","destroyPlayer","player","destroy","Clappr","Player","parent","refs","hlsjsConfig","enableWorker","ref","React","Component","page","slidePage","uploadSlides","changeSlidesPage","canvasRef","useRef","usePdf","pdfDocument","pdfPage","Dragger","InboxOutlined","Boolean","numPages","LeftCircleOutlined","RightCircleOutlined","lectureStarted","optionsMenu","MessageOutlined","justify","autoPlay","muted","bordered","header","overlay","trigger","preventDefault","MoreOutlined","HistoryOutlined","startLecture","stopLecture","playsInline","StopOutlined","Wrapped","create","loginAsGuest","handleSubmit","validateFields","err","username","getFieldDecorator","onSubmit","view","deleteAdmin","editAdmin","administrator","privateRoutes","render","Alert","Profile","RegisterTutor","RegisterStudent","LoginAsGuest","Login","TutorClassroom","exact","Classroom","Home","initialState","getItem","initState","currentReplayUrl","combineReducers","slidesPage","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","subscribe","previousState","logout","welcome","menu","IdcardOutlined","LogoutOutlined","Logo","alt","Header","Footer","App","minHeight","Routes","match","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d425fe04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-monochrome.3a32a11f.svg\";","import {\r\n    GET_PUBLISH_TOKEN,\r\n    GET_PLAY_TOKEN,\r\n    CONNECTION_SUCCESS,\r\n    CONNECTION_CLOSE,\r\n    START_SHARING,\r\n    START_SHARING_SUCCESS,\r\n    START_SHARING_FAIL,\r\n    STOP_SHARING,\r\n    TOGGLE_MIC\r\n} from './types';\r\nimport axios from 'axios';\r\nimport config from '../Config';\r\nimport { setAlert } from './alert';\r\nimport WebRTCAdaptor from '../utils/webrtc_adaptor';\r\n\r\nlet webRTCAdaptor;\r\n\r\nexport const initWebrtc = (classroomId) => async (dispatch) => {\r\n    try {\r\n        const classroom = await axios.get(`${config.URL.Server}/api/classrooms/${classroomId}`);\r\n        const websocketURL = `wss://${window.location.hostname}:5443/${classroom.data.mediaServerApp}/websocket`;\r\n\r\n        webRTCAdaptor = new WebRTCAdaptor({\r\n            websocket_url: websocketURL,\r\n            mediaConstraints: {\r\n                audio: true,\r\n                video: true\r\n            },\r\n            peerconnection_config: null,\r\n            sdp_constraints: {\r\n                OfferToReceiveAudio: false,\r\n                OfferToReceiveVideo: false\r\n            },\r\n            localVideoId: \"localVideo\",\r\n            debug: true,\r\n            callback: function (info, obj) {\r\n                if (info == \"initialized\") {\r\n                    console.log(\"initialized\");\r\n                    dispatch({\r\n                        type: CONNECTION_SUCCESS\r\n                    });\r\n                } else if (info == \"publish_started\") {\r\n                    //stream is being published\r\n                    console.log(\"publish started\");\r\n                    dispatch({\r\n                        type: START_SHARING_SUCCESS\r\n                    });\r\n                } else if (info == \"publish_finished\") {\r\n                    //stream is being finished\r\n                    console.log(\"publish finished\");\r\n                    dispatch({\r\n                        type: STOP_SHARING\r\n                    });\r\n                } else if (info == \"closed\") {\r\n                    //console.log(\"Connection closed\");\r\n                    if (typeof obj != \"undefined\") {\r\n                        console.log(\"Connecton closed: \" + JSON.stringify(obj));\r\n                    }\r\n                    dispatch({\r\n                        type: CONNECTION_CLOSE\r\n                    });\r\n                } else if (info == \"refreshConnection\") {\r\n                    dispatch({\r\n                        type: START_SHARING\r\n                    });\r\n                    startPublishing();\r\n                } else if (info == \"updated_stats\") {\r\n                    //obj is the PeerStats which has fields\r\n                    //averageOutgoingBitrate - kbits/sec\r\n                    //currentOutgoingBitrate - kbits/sec\r\n                    console.log(\"Average outgoing bitrate \" + obj.averageOutgoingBitrate + \" kbits/sec\" +\r\n                        \" Current outgoing bitrate: \" + obj.currentOutgoingBitrate + \" kbits/sec\");\r\n\r\n                }\r\n            },\r\n            callbackError: function (error, message) {\r\n                console.log(\"error callback: \" + JSON.stringify(error));\r\n                var errorMessage = JSON.stringify(error);\r\n                if (typeof message != \"undefined\") {\r\n                    errorMessage = message;\r\n                }\r\n\r\n                if (error.indexOf(\"NotFoundError\") != -1) {\r\n                    errorMessage = \"Camera or mic are not found or not allowed in your device.\";\r\n                } else if (error.indexOf(\"NotReadableError\") != -1 || error.indexOf(\"TrackStartError\") != -1) {\r\n                    errorMessage = \"Camera or mic is being used by some other program. Please, make sure and try again.\";\r\n                } else if (error.indexOf(\"OverconstrainedError\") != -1 || error.indexOf(\"ConstraintNotSatisfiedError\") != -1) {\r\n                    errorMessage = \"No device was found for audio/video.\"\r\n                } else if (error.indexOf(\"NotAllowedError\") != -1 || error.indexOf(\"PermissionDeniedError\") != -1) {\r\n                    errorMessage = \"Please, allow the browser to access camera and mic.\";\r\n                } else if (error.indexOf(\"TypeError\") != -1) {\r\n                    errorMessage = \"Connection error.\";\r\n                } else if (error.indexOf(\"ScreenSharePermissionDenied\") != -1) {\r\n                    errorMessage = \"Please, allow screen sharing in the browser.\";\r\n                } else if (error.indexOf(\"WebSocketNotConnected\") != -1) {\r\n                    errorMessage = \"Connection error.\";\r\n                    dispatch({\r\n                        type: CONNECTION_CLOSE\r\n                    });\r\n                }\r\n                alert(errorMessage);\r\n            }\r\n        });\r\n    } catch (err) {\r\n        if (err.response) {\r\n            const errors = err.response.data.errors;\r\n\r\n            if (errors)\r\n                for (let error of errors)\r\n                    dispatch(setAlert(error.msg, 'error', 5000));\r\n        }\r\n        console.log('Error', err);\r\n    }\r\n}\r\n\r\nconst startPublishing = (token, classroomId) => {\r\n    const streamId = classroomId;\r\n    webRTCAdaptor.publish(streamId, token);\r\n}\r\n\r\nexport const startPublishingAction = (token, classroomId) => dispatch => {\r\n    dispatch({\r\n        type: START_SHARING\r\n    });\r\n\r\n    startPublishing(token, classroomId);\r\n}\r\n\r\nexport const stopPublishing = (classroomId) => dispatch => {\r\n    webRTCAdaptor.stop(classroomId);\r\n\r\n    dispatch({\r\n        type: STOP_SHARING\r\n    });\r\n}\r\n\r\nexport const switchMode = (classroomId, newMode) => dispatch => {\r\n    console.log(newMode, classroomId);\r\n    switch (newMode) {\r\n        case 'webcam':\r\n            webRTCAdaptor.turnOnLocalCamera();\r\n            webRTCAdaptor.switchVideoCapture(classroomId);\r\n            break;\r\n        case 'screen':\r\n            webRTCAdaptor.switchDesktopCapture(classroomId);\r\n            break;\r\n        case 'audio':\r\n            webRTCAdaptor.turnOffLocalCamera();\r\n    }\r\n}\r\n\r\nexport const toggleMic = () => (dispatch, getState) => {\r\n    if (getState().stream.micMuted) {\r\n        webRTCAdaptor.unmuteLocalMic();\r\n    } else {\r\n        webRTCAdaptor.muteLocalMic();\r\n    }\r\n\r\n    dispatch({\r\n        type: TOGGLE_MIC\r\n    });\r\n}\r\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n    localStorage.setItem('token', token);\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n    localStorage.removeItem('token');\n  }\n};\n\nexport default setAuthToken;","import {v4} from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = v4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id }\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport const GET_TUTORS = 'GET_TUTORS';\nexport const GET_STUDENTS = 'GET_STUDENTS';\nexport const EDIT_TUTOR = 'EDIT_TOTUR';\nexport const EDIT_STUDENT = 'EDIT_STUDENT';\nexport const EDIT_TUTOR_SUCCESS = 'EDIT_TUTOR_SUCCESS';\nexport const EDIT_TUTOR_FAIL = 'EDIT_TUTOR_FAIL';\nexport const EDIT_STUDENT_SUCCESS = 'EDIT_STUDENT_SUCCESS';\nexport const EDIT_STUDENT_FAIL = 'EDIT_STUDENT_FAIL';\nexport const DELETE_TUTOR = 'DELETE_TUTOR';\nexport const DELETE_TUTOR_SUCCESS = 'DELETE_TUTOR_SUCCESS';\nexport const DELETE_TUTOR_FAIL = 'DELETE_TUTOR_FAIL';\nexport const DELETE_STUDENT = 'DELETE_STUDENT';\nexport const DELETE_STUDENT_SUCCESS = 'DELETE_STUDENT_SUCCESS';\nexport const DELETE_STUDENT_FAIL = 'DELETE_STUDENT_FAIL';\nexport const EDIT_ADMIN = 'EDIT_ADMIN';\nexport const EDIT_ADMIN_SUCCESS = 'EDIT_ADMIN_SUCCESS';\nexport const EDIT_ADMIN_FAIL = 'EDIT_ADMIN_FAIL';\nexport const DELETE_ADMIN = 'DELETE_ADMIN';\nexport const DELETE_ADMIN_SUCCESS = 'DELETE_ADMIN_SUCCESS';\nexport const DELETE_ADMIN_FAIL = 'DELETE_ADMIN_FAIL';\n\nexport const START_LECTURE = 'START_LECTURE';\nexport const STOP_LECTURE = 'STOP_LECTURE';\nexport const LOAD_LECTURE = 'LOAD_LECTURE';\nexport const GET_PUBLISH_TOKEN = 'GET_PUBLISH_TOKEN';\nexport const GET_PLAY_TOKEN = 'GET_PLAY_TOKEN';\nexport const ALLOW_USER_STREAM = 'ALLOW_USER_STREAM';\n\nexport const GET_MESSAGES = 'GET_MESSAGES';\nexport const SET_MESSAGES = 'SET_MESSAGES';\nexport const RECEIVE_MESSAGE = 'RECEIVE_MESSAGE';\nexport const RECEIVE_SLIDE = 'RECEIVE_SLIDE';\nexport const CHANGE_SLIDE_PAGE = 'CHANGE_SLIDE_PAGE';\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const JOIN_CLASSROOM = 'JOIN_CLASSROOM';\nexport const JOIN_CLASSROOM_SUCCESS = 'JOIN_CLASSROOM_SUCCESS';\nexport const JOIN_CLASSROOM_FAIL = 'JOIN_CLASSROOM_FAIL';\nexport const USER_JOINED = 'USER_JOINED';\nexport const USER_LEFT = 'USER_LEFT';\nexport const CHANGE_CURRENT_REPLAY = 'CHANGE_CURRENT_REPLAY';\n\nexport const UPLOAD_FILE = 'UPLOAD_FILE';\nexport const UPLOAD_FILE_SUCCESS = 'UPLOAD_FILE_SUCCESS';\nexport const UPLOAD_FILE_FAIL = 'UPLOAD_FILE_FAIL';\n\nexport const GET_TUTOR_LECTURES = 'GET_TUTOR_LECTURES';\nexport const GET_STUDENT_LECTURES = 'GET_STUDENT_LECTURES';\nexport const GET_TUTOR_CLASSROOMS = 'GET_TUTOR_CLASSROOMS';\nexport const GET_STUDENT_CLASSROOMS = 'GET_STUDENT_CLASSROOMS';\n\nexport const CONNECTION_SUCCESS = 'CONNECTION_SUCCESS';\nexport const CONNECTION_CLOSE = 'CONNECTION_CLOSE';\nexport const START_SHARING = 'START_SHARING';\nexport const START_SHARING_SUCCESS = 'START_SHARING_SUCCESS';\nexport const START_SHARING_FAIL = 'START_SHARING_FAIL';\nexport const STOP_SHARING = 'STOP_SHARING';\nexport const TOGGLE_MIC = 'TOGGLE_MIC';\n\nexport const ADD_CLASSROOM = 'ADD_CLASSROOM';\nexport const GET_CLASSROOMS = 'GET_CLASSROOMS';\nexport const ADD_LECTURE = 'ADD_LECTURE';\nexport const GET_LECTURES = 'GET_LECTURES';\nexport const DELETE_CLASSROOM = 'DELETE_CLASSROOM';\nexport const DELETE_CLASSROOM_SUCCESS = 'DELETE_CLASSROOM_SUCCESS';\nexport const DELETE_CLASSROOM_FAIL = 'DELETE_CLASSROOM_FAIL';\nexport const EDIT_CLASSROOM = 'EDIT_CLASSROOM';\nexport const EDIT_CLASSROOM_SUCCESS = 'EDIT_CLASSROOM_SUCCESS';\nexport const EDIT_CLASSROOM_FAIL = 'EDIT_CLASSROOM_FAIL';\n\nexport const GET_STUDENTS_OF_CLASSROOM = 'GET_STUDENTS_OF_CLASSROOM';\nexport const GET_STUDENTS_OF_CLASSROOM_SUCCESS = 'GET_STUDENTS_OF_CLASSROOM_SUCCESS';\nexport const GET_STUDENTS_OF_CLASSROOM_FAIL = 'GET_STUDENTS_OF_CLASSROOM_FAIL';\nexport const ADD_STUDENT_TO_CLASSROOM = 'ADD_STUDENT_TO_CLASSROOM';\nexport const ADD_STUDENT_TO_CLASSROOM_SUCCESS = 'ADD_STUDENT_TO_CLASSROOM_SUCCESS';\nexport const ADD_STUDENT_TO_CLASSROOM_FAIL = 'ADD_STUDENT_TO_CLASSROOM_FAIL';\nexport const DELETE_STUDENT_FROM_CLASSROOM = 'DELETE_STUDENT_FROM_CLASSROOM';\nexport const DELETE_STUDENT_FROM_CLASSROOM_SUCCESS = 'DELETE_STUDENT_FROM_CLASSROOM_SUCCESS';\nexport const DELETE_STUDENT_FROM_CLASSROOM_FAIL = 'DELETE_STUDENT_FROM_CLASSROOM_FAIL';\n// export const BAN_STUDENT = 'BAN_STUDENT';","const Config = {\n    URL: {\n        Server: 'https://www.swiftcourse.me',\n        Client: 'http://localhost:3000'\n    }\n}\n\nexport default Config;","import axios from 'axios';\nimport {\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\nimport { setAlert } from './alert';\nimport Config from '../Config';\n\nconst URL = Config.URL.Server;\n\nexport const registerStudent = ({ name, email, password }) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ name, email, password });\n\n    try {\n        const res = await axios.post(URL + '/api/students', body, config);\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n    } catch (err) {\n        console.log(err);\n        const errors = err.response.data.errors;\n\n        if (errors)\n            for (let error of errors)\n                dispatch(setAlert(error.msg, 'error', 100000));\n\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n}\n\nexport const registerTutor = ({ name, email, password }) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ name, email, password });\n\n    try {\n        const res = await axios.post(URL + '/api/tutors', body, config);\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n    } catch (err) {\n        if (err.response) {\n            const errors = err.response.data.errors;\n            for (let error of errors)\n                dispatch(setAlert(error.msg, 'error', 12000));\n        }\n        console.log('Error', err);\n\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n}\n\n\nexport const loadUser = () => async dispatch => {\n    try {\n        const res = await axios.get(URL + '/api/auth/');\n    \n        dispatch({\n          type: USER_LOADED,\n          payload: res.data\n        });\n      } catch (err) {\n        dispatch({\n          type: AUTH_ERROR\n        });\n    }\n}\n\nexport const login = (email, password) => async dispatch => {\n    const headers = { 'Content-Type': 'application/json' };\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post(URL + '/api/auth/', body, { headers });\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors)\n            for (let error of errors)\n                dispatch(setAlert(error.msg, 'error', 100000));\n\n        dispatch({\n            type: LOGIN_FAIL\n        });\n    }\n}\n\nexport const loginAsGuest = name => async dispatch => {\n    const headers = { 'Content-Type': 'application/json' };\n    const body = JSON.stringify({ name });\n\n    try {\n        const res = await axios.post(URL + '/api/auth/guest', body, { headers });\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n        // dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors)\n            for (let error of errors)\n                dispatch(setAlert(error.msg, 'error', 100000));\n\n        dispatch({\n            type: LOGIN_FAIL\n        });\n    }\n}\n\nexport const logout = (history, redirectPath) => async dispatch => {\n    localStorage.setItem('token', '');\n    setTimeout(() => {\n        history.push(redirectPath);\n        dispatch({\n            type: LOGOUT\n        });\n    }, 2000)\n}","import React, { Fragment } from 'react';\nimport { Form, Input, Button, Checkbox, Layout } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport '@ant-design/compatible/assets/index.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/auth';\n\nconst { Content, Sider } = Layout;\n\nconst Login = ({ login, isAuthenticated, user }) => {\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 8 },\n      };\n      const tailLayout = {\n        wrapperCol: { offset: 8, span: 8 },\n      };\n\n    const [form] = Form.useForm();\n    const onFinish = values => {\n        const { email, password } = values;\n        login(email, password);\n    }\n\n    if (isAuthenticated && user) {\n        return <Redirect to='/dashboard' />;\n    }\n\n    return (\n        <Fragment>\n            <Content>\n            <h1>Login Page</h1>\n                <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n    >\n      <Form.Item\n        label=\"Email\"\n        name=\"email\"\n        rules={[{ required: true, message: 'Please input your email!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n        <Checkbox>Remember me</Checkbox>\n        <br />      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n      <a className=\"login-form-forgot\" href=\"\">\n            Forgot password\n        </a>\n<br />\n        Don't have an account? <Link to='/register/student'>Sign up as a student</Link> or <Link to='/register/tutor'>sign up as a tutor</Link>.\n    </Form>\n    </Content>\n        </Fragment>\n    );\n}\n\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\n\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n});\n\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Alert } from 'antd';\n\nconst AlertWrapper = ({alerts}) =>\n    alerts !== null &&\n    alerts.length > 0 &&\n    alerts.map(alert => (\n        <Alert key={alert.id} message={alert.msg} type={alert.alertType} showIcon />\n    ));\n\nAlertWrapper.propTypes = {\n    alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n    alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(AlertWrapper);","import React from 'react';\nimport { Input, Button, Form } from 'antd';\nimport '@ant-design/compatible/assets/index.css';\nimport { Icon } from '@ant-design/compatible';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registerTutor } from '../../actions/auth';\nimport { setAlert } from '../../actions/alert';\nimport { Fragment } from 'react';\n\nconst Register = ({ setAlert, registerTutor, isAuthenticated }) => {\n    const [form] = Form.useForm();\n    const onFinish = values => {\n        let { name, email, password, password2 } = values;\n\n        if (password !== password2) {\n            setAlert('Passwords do not match', 'error');\n        } else {\n            registerTutor({ name, email, password });\n        }\n    }\n\n    if (isAuthenticated) {\n        return <Redirect to='/dashboard' />;\n    }\n\n    return (\n        <Fragment>\n            <h1>Registration page for tutors</h1>\n            <Form form={form} onFinish={onFinish} initialValues={{ Private: false, record: false }}>\n                <Form.Item name=\"email\" rules={[{ required: true, message: 'Please input your email!' }]}>\n                    <Input\n                        prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"email\"\n                    />\n                </Form.Item>\n\n                <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input your name!' }]}>\n                    <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"name\"\n                    />\n                </Form.Item>\n\n                <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input the password!' }]}>\n                    <Input\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"password\"\n                    />\n                </Form.Item>\n\n                <Form.Item name=\"password2\" rules={[{ required: true, message: 'Please input the password again!' }]}>\n                    <Input\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"password confirm\"\n                    />\n                </Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Register\n            </Button><br></br><br></br>\n            Already have an account? <Link to='/login'>Login</Link>\n            </Form>\n        </Fragment>\n    );\n}\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n    mapStateToProps,\n    { setAlert, registerTutor }\n)(Register);","import React from 'react';\nimport { Input, Button, Form } from 'antd';\nimport '@ant-design/compatible/assets/index.css';\nimport { Icon } from '@ant-design/compatible';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registerStudent } from '../../actions/auth';\nimport { setAlert } from '../../actions/alert';\nimport { Fragment } from 'react';\n\nconst Register = ({ setAlert, registerStudent, isAuthenticated }) => {\n    const [form] = Form.useForm();\n    const onFinish = values => {\n        let { name, email, password, password2 } = values;\n\n        if (password !== password2) {\n            setAlert('Passwords do not match', 'error');\n        } else {\n            registerStudent({ name, email, password });\n        }\n    }\n\n    if (isAuthenticated) {\n        return <Redirect to='/dashboard' />;\n    }\n\n    return (\n        <Fragment>\n            <h1>Registration page for students</h1>\n            <Form form={form} onFinish={onFinish} initialValues={{ Private: false, record: false }}>\n                <Form.Item name=\"email\" rules={[{ required: true, message: 'Please input your email!' }]}>\n                    <Input\n                        prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"email\"\n                    />\n                </Form.Item>\n\n                <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input your name!' }]}>\n                    <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"name\"\n                    />\n                </Form.Item>\n\n                <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input the password!' }]}>\n                    <Input\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"password\"\n                    />\n                </Form.Item>\n\n                <Form.Item name=\"password2\" rules={[{ required: true, message: 'Please input the password again!' }]}>\n                    <Input\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"password confirm\"\n                    />\n                </Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Register\n            </Button><br></br><br></br>\n            Already have an account? <Link to='/login'>Login</Link>\n            </Form>\n        </Fragment>\n    );\n}\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n    mapStateToProps,\n    { setAlert, registerStudent }\n)(Register);","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { Result, Button } from 'antd';\n\nconst ErrorNotFound = () => {\n    return (\n        <Result\n        status=\"404\"\n        title=\"404\"\n        subTitle=\"Sorry, the page you visited does not exist.\"\n        extra={<Link to='/'><Button type=\"primary\">Back Home</Button></Link>}\n      />\n    );\n}\n\nexport default ErrorNotFound;","import axios from 'axios';\r\nimport {\r\n    GET_TUTORS,\r\n    GET_STUDENTS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    EDIT_STUDENT,\r\n    EDIT_TUTOR,\r\n    EDIT_TUTOR_SUCCESS,\r\n    EDIT_TUTOR_FAIL,\r\n    EDIT_STUDENT_SUCCESS,\r\n    EDIT_STUDENT_FAIL,\r\n    ADD_CLASSROOM,\r\n    GET_CLASSROOMS,\r\n    EDIT_CLASSROOM_FAIL,\r\n    EDIT_CLASSROOM,\r\n    EDIT_CLASSROOM_SUCCESS,\r\n    DELETE_CLASSROOM,\r\n    DELETE_CLASSROOM_FAIL,\r\n    DELETE_CLASSROOM_SUCCESS,\r\n    DELETE_STUDENT,\r\n    DELETE_STUDENT_FAIL,\r\n    DELETE_STUDENT_SUCCESS,\r\n    DELETE_TUTOR,\r\n    DELETE_TUTOR_SUCCESS,\r\n    DELETE_TUTOR_FAIL,\r\n    DELETE_ADMIN,\r\n    DELETE_ADMIN_SUCCESS,\r\n    DELETE_ADMIN_FAIL,\r\n    EDIT_ADMIN,\r\n    EDIT_ADMIN_SUCCESS,\r\n    EDIT_ADMIN_FAIL\r\n} from './types';\r\nimport { setAlert } from './alert';\r\nimport { loadUser } from './auth';\r\nimport Config from '../Config';\r\n\r\nconst URL = Config.URL.Server;\r\n\r\nexport const getTutors = () => async dispatch => {\r\n    try {\r\n        const tutors = await axios.get(URL + '/api/tutors');\r\n        dispatch({\r\n            type: GET_TUTORS,\r\n            payload: tutors.data\r\n        })\r\n    } catch (err) {\r\n        if (err.response) {\r\n            const errors = err.response.data.errors;\r\n            for (let error of errors)\r\n                dispatch(setAlert(error.msg, 'error', 12000));\r\n        }\r\n\r\n        console.log('Error', err);\r\n    }\r\n}\r\n\r\nexport const editTutor = (tutor, history, redirectPath) => async (dispatch, getState) => {\r\n    const { name, email, _id } = tutor;\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, _id });\r\n    try {\r\n        dispatch({\r\n            type: EDIT_TUTOR\r\n        });\r\n        await axios.put(URL + '/api/tutors', body, config);\r\n\r\n        let tutors = getState().admin.tutors.filter(t => t._id !== _id);\r\n        tutors = [...tutors, tutor];\r\n\r\n        // Fake delay to test the Spin component.\r\n        // TODO: remove fake delay.\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: EDIT_TUTOR_SUCCESS,\r\n                payload: tutors\r\n            });\r\n            history.push(redirectPath);\r\n        }, 2000)\r\n\r\n        // dispatch({\r\n        //     type: EDIT_TUTOR,\r\n        //     payload: tutors\r\n        // });\r\n        // history.push(redirectPath);\r\n    } catch (err) {\r\n        if (err.response) {\r\n            const errors = err.response.data.errors;\r\n            for (let error of errors)\r\n                dispatch(setAlert(error.msg, 'error', 12000));\r\n        }\r\n\r\n        console.log('Error', err);\r\n\r\n        dispatch({\r\n            type: EDIT_TUTOR_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteTutor = (id, history, redirectPath) => async (dispatch, getState) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    try {\r\n        dispatch({\r\n            type: DELETE_TUTOR\r\n        })\r\n        await axios.delete(URL + `/api/tutors/${id}`, config);\r\n        let tutors = getState().admin.tutors.filter(t => t._id !== id);\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: DELETE_TUTOR_SUCCESS,\r\n                payload: tutors\r\n            });\r\n            history.push(redirectPath);\r\n        }, 2000)\r\n    } catch (err) {\r\n        console.log(err);\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors)\r\n            for (let error of errors)\r\n                dispatch(setAlert(error.msg, 'error', 100000));\r\n\r\n        dispatch({\r\n            type: DELETE_TUTOR_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const editStudent = (student, history, redirectPath) => async (dispatch, getState) => {\r\n    const { name, email, _id } = student;\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, _id });\r\n    try {\r\n        dispatch({\r\n            type: EDIT_STUDENT\r\n        });\r\n        await axios.put(URL + '/api/students', body, config);\r\n\r\n        let students = getState().admin.students.filter(t => t._id !== _id);\r\n        students = [...students, student];\r\n\r\n        // Fake delay to test the Spin component.\r\n        // TODO: remove fake delay.\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: EDIT_STUDENT_SUCCESS,\r\n                payload: students\r\n            });\r\n            history.push(redirectPath);\r\n        }, 2000)\r\n\r\n        // dispatch({\r\n        //     type: EDIT_STUDENT,\r\n        //     payload: students\r\n        // });\r\n        // history.push(redirectPath);\r\n    } catch (err) {\r\n        if (err.response) {\r\n            const errors = err.response.data.errors;\r\n            for (let error of errors)\r\n                dispatch(setAlert(error.msg, 'error', 12000));\r\n        }\r\n\r\n        console.log('Error', err);\r\n\r\n        dispatch({\r\n            type: EDIT_STUDENT_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteStudent = (id, history, redirectPath) => async (dispatch, getState) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    try {\r\n        dispatch({\r\n            type: DELETE_STUDENT\r\n        })\r\n        await axios.delete(URL + `/api/students/${id}`, config);\r\n        let students = getState().admin.students.filter(t => t._id !== id);\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: DELETE_STUDENT_SUCCESS,\r\n                payload: students\r\n            });\r\n            history.push(redirectPath);\r\n        }, 2000)\r\n    } catch (err) {\r\n        console.log(err);\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors)\r\n            for (let error of errors)\r\n                dispatch(setAlert(error.msg, 'error', 100000));\r\n\r\n        dispatch({\r\n            type: DELETE_STUDENT_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getStudents = () => async dispatch => {\r\n    try {\r\n        const students = await axios.get(URL + '/api/students');\r\n        dispatch({\r\n            type: GET_STUDENTS,\r\n            payload: students.data\r\n        })\r\n    } catch (err) {\r\n        if (err.response) {\r\n            const errors = err.response.data.errors;\r\n            for (let error of errors)\r\n                dispatch(setAlert(error.msg, 'error', 12000));\r\n        }\r\n\r\n        console.log('Error', err);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const addAdmin = ({ name, email, password }, history, redirectPath) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n\r\n        const res = await axios.post(URL + '/api/administrators', body, config);\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            history.push(redirectPath);\r\n        }, 2000)\r\n\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        console.log(err);\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors)\r\n            for (let error of errors)\r\n                dispatch(setAlert(error.msg, 'error', 100000));\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteAdmin = (id, history, redirectPath) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        dispatch({\r\n            type: DELETE_ADMIN\r\n        })\r\n        await axios.delete(URL + `/api/administrators/${id}`, config);\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: DELETE_ADMIN_SUCCESS\r\n            });\r\n            history.push(redirectPath);\r\n        }, 2000)\r\n\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        console.log(err);\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors)\r\n            for (let error of errors)\r\n                dispatch(setAlert(error.msg, 'error', 100000));\r\n\r\n        dispatch({\r\n            type: DELETE_ADMIN_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const editAdmin = ({ name, email, password }, history, redirectPath) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n        dispatch({\r\n            type: EDIT_ADMIN\r\n        })\r\n        await axios.put(URL + `/api/administrators/`, body, config);\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: EDIT_ADMIN_SUCCESS\r\n            });\r\n            history.push(redirectPath);\r\n        }, 2000)\r\n\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        console.log(err);\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors)\r\n            for (let error of errors)\r\n                dispatch(setAlert(error.msg, 'error', 100000));\r\n\r\n        dispatch({\r\n            type: EDIT_ADMIN_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const addClassroom = ({ id, tutor, Private, record }, history, redirectPath) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ id, tutor, Private, record });\r\n\r\n    try {\r\n        const res = await axios.post(URL + '/api/classrooms', body, config);\r\n        dispatch({\r\n            type: ADD_CLASSROOM,\r\n            payload: res.data\r\n        });\r\n        setTimeout(() => {\r\n            history.push(redirectPath);\r\n        }, 2000)\r\n    } catch (err) {\r\n        console.log(err);\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors)\r\n            for (let error of errors)\r\n                dispatch(setAlert(error.msg, 'error', 100000));\r\n    }\r\n}\r\n\r\nexport const getClassrooms = () => async dispatch => {\r\n    try {\r\n        const classrooms = await axios.get(URL + '/api/classrooms');\r\n        dispatch({\r\n            type: GET_CLASSROOMS,\r\n            payload: classrooms.data\r\n        })\r\n    } catch (err) {\r\n        console.log(err);\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors)\r\n            for (let error of errors)\r\n                dispatch(setAlert(error.msg, 'error', 100000));\r\n    }\r\n}\r\n\r\nexport const editClassroom = (classroom, newid, history, redirectPath) => async (dispatch, getState) => {\r\n    const { id, Private, email, record } = classroom;\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    const body = JSON.stringify({ newid, id, Private, email, record });\r\n    try {\r\n        dispatch({\r\n            type: EDIT_CLASSROOM\r\n        });\r\n        await axios.put(URL + '/api/classrooms', body, config);\r\n        let classrooms = getState().admin.classrooms.filter(t => t.id !== id);\r\n        classrooms = [...classrooms, classroom];\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: EDIT_CLASSROOM_SUCCESS,\r\n                payload: classrooms\r\n            });\r\n            history.push(redirectPath);\r\n        }, 2000)\r\n    } catch (err) {\r\n        console.log(err);\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors)\r\n            for (let error of errors)\r\n                dispatch(setAlert(error.msg, 'error', 100000));\r\n        dispatch({\r\n            type: EDIT_CLASSROOM_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteClassroom = (id, history, redirectPath) => async (dispatch, getState) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    try {\r\n        dispatch({\r\n            type: DELETE_CLASSROOM\r\n        });\r\n        await axios.delete(URL + `/api/classrooms/${id}`, config);\r\n        let classrooms = await getState().admin.classrooms.filter(t => t.id !== id);\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: DELETE_CLASSROOM_SUCCESS,\r\n                payload: classrooms\r\n            });\r\n            history.push(redirectPath);\r\n        }, 2000)\r\n    } catch (err) {\r\n        console.log(err);\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors)\r\n            for (let error of errors)\r\n                dispatch(setAlert(error.msg, 'error', 100000));\r\n        dispatch({\r\n            type: DELETE_CLASSROOM_FAIL\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Icon as LegacyIcon } from '@ant-design/compatible';\r\nimport { List, Avatar, Skeleton } from 'antd';\r\nimport { getTutors } from '../../../actions/adimnActions';\r\n\r\n\r\nconst TutorsList = ({ tutors, loading, getTutors }) => {\r\n    useEffect(() => {\r\n        getTutors();\r\n    }, []);\r\n\r\n    return (\r\n        <Skeleton avatar title={false} loading={loading} active>\r\n            <List\r\n                loading={loading}\r\n                itemLayout=\"horizontal\"\r\n                dataSource={tutors}\r\n                renderItem={item => (\r\n                    <List.Item\r\n                        actions={[<Link key=\"tutor-edit\" to={`/dashboard/tutor/${item._id}`}>edit</Link>]}\r\n                    >\r\n                        <List.Item.Meta\r\n                            avatar={\r\n                                <Avatar icon={<LegacyIcon type='user' />} />\r\n                            }\r\n                            title={<Link to={`/dashboard/tutor/${item._id}`}>{item.name}</Link>}\r\n                        //description={`About : ${item.about} `}\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </Skeleton>\r\n    );\r\n}\r\n\r\nTutorsList.propTypes = {\r\n    tutors: PropTypes.array,\r\n    loading: PropTypes.bool,\r\n    getTutors: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    tutors: state.admin.tutors,\r\n    loading: state.admin.loading\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps, { getTutors }\r\n)(TutorsList);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Input, Button, Form, Spin } from 'antd';\nimport { Icon } from '@ant-design/compatible';\nimport { setAlert } from '../../../actions/alert';\nimport { addAdmin } from '../../../actions/adimnActions';\nimport { useHistory } from 'react-router-dom';\nimport { LoadingOutlined } from '@ant-design/icons';\n\n\n\nconst AddAdmin = ({ setAlert, addAdmin, loading }) => {\n    const history = useHistory();\n    const [form] = Form.useForm();\n    const onFinish = values => {\n        let { name, email, password, password2 } = values;\n\n        if (password !== password2) {\n            setAlert('Passwords do not match', 'error');\n        } else {\n            addAdmin({ name, email, password }, history, '/dashboard');\n        }\n    }\n\n    return (\n        <Fragment>\n            <h1>Add Extra Administrator</h1>\n            <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} size=\"large\" spinning={loading}>\n                <Form form={form} onFinish={onFinish} initialValues={{ Private: false, record: false }}>\n                    <Form.Item name=\"email\" rules={[{ required: true, message: 'Please input the admin email!' }]}>\n                        <Input\n                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"email of the new administrator\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input the admin name!' }]}>\n                        <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"name of the new administrator\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input the password!' }]}>\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"password\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"password2\" rules={[{ required: true, message: 'Please input the password again!' }]}>\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"password confirm\"\n                        />\n                    </Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Add Administrator\n                </Button>\n                </Form>\n            </Spin>\n        </Fragment>\n    );\n}\n\nAddAdmin.propTypes = {\n    admin: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    addAdmin: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    admin: state.auth.user,\n    loading: state.auth.loading\n})\n\n// const Wrapped = Form.create({ name: 'AddClassroom' })(AddClassroom);\n\nexport default connect(mapStateToProps, { setAlert, addAdmin })(AddAdmin);","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon as LegacyIcon } from '@ant-design/compatible';\nimport { Menu } from 'antd';\nimport { VideoCameraAddOutlined } from '@ant-design/icons';\n\nconst AdminSidebar = () => {\n    return (\n        <Fragment>\n            <Menu theme=\"dark\" mode=\"inline\" >\n                <Menu.Item key=\"home\">\n                    <Link to=\"/dashboard\">\n                        <LegacyIcon type=\"home\" />\n                    Home</Link>\n                </Menu.Item>\n                <Menu.Item key=\"tutors-list\">\n                    <Link to=\"/dashboard/tutors\">\n                        <LegacyIcon type=\"team\" />\n                    Tutors List</Link>\n                </Menu.Item>\n                <Menu.Item key=\"students-list\">\n                    <Link to=\"/dashboard/students\">\n                        <LegacyIcon type=\"team\" />\n                    Students List</Link>\n                </Menu.Item>\n                <Menu.Item key=\"classrooms\">\n                    <Link to=\"/dashboard/classrooms\">\n                        <LegacyIcon type=\"video-camera\" />\n                    Classrooms</Link>\n                </Menu.Item>\n                <Menu.Item key=\"add-classroom\">\n                    <Link to=\"/dashboard/addClassroom\">\n                        <VideoCameraAddOutlined />\n                    New Classroom</Link>\n                </Menu.Item>\n                <Menu.Item key=\"add-extra-admin\">\n                    <Link to=\"/dashboard/addAdmin\">\n                        <LegacyIcon type=\"user-add\" />\n                    Add an Extra Admin</Link>\n                </Menu.Item>\n            </Menu>\n        </Fragment>\n    );\n}\n\n\nexport default AdminSidebar;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Icon as LegacyIcon } from '@ant-design/compatible';\nimport { List, Avatar, Skeleton } from 'antd';\nimport { getStudents } from '../../../actions/adimnActions';\n\n\nconst StudentsList = ({ students, loading, getStudents }) => {\n    useEffect(() => {\n        getStudents();\n    }, []);\n\n    return (\n        <Skeleton avatar title={false} loading={loading} active>\n            <List\n                loading={loading}\n                itemLayout=\"horizontal\"\n                dataSource={students}\n                renderItem={item => (\n                    <List.Item\n                        actions={[<Link key=\"student-edit\" to={`/dashboard/student/${item._id}`}>edit</Link>]}\n                    >\n                        <List.Item.Meta\n                            avatar={\n                                <Avatar icon={<LegacyIcon type='user' />} />\n                            }\n                            title={<Link to={`/dashboard/student/${item._id}`}>{item.name}</Link>}\n                        //description={`About : ${item.about} `}\n                        />\n                    </List.Item>\n                )}\n            />\n        </Skeleton>\n    );\n}\n\nStudentsList.propTypes = {\n    students: PropTypes.array,\n    loading: PropTypes.bool,\n    getStudents: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    students: state.admin.students,\n    loading: state.admin.loading\n});\n\nexport default connect(\n    mapStateToProps, { getStudents }\n)(StudentsList);","import React, { useEffect } from 'react';\r\nimport { Form, Input, Button, Spin, Popconfirm } from 'antd';\r\nimport { LoadingOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { Icon } from '@ant-design/compatible';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { editTutor, deleteTutor } from '../../../actions/adimnActions';\r\nimport { Fragment } from 'react';\r\n\r\nconst EditTutor = ({ tutors, editTutor, deleteTutor, loading }) => {\r\n    const history = useHistory();\r\n    const [form] = Form.useForm();\r\n    let { id } = useParams();\r\n    let tutor;\r\n\r\n    useEffect(() => {\r\n        tutor = tutors.find(elm => elm._id === id);\r\n\r\n        if (tutor) {\r\n            form.setFieldsValue({\r\n                email: tutor.email,\r\n                name: tutor.name\r\n            });\r\n        }\r\n    });\r\n\r\n    const onFinish = values => {\r\n        const { email, name } = values;\r\n        tutor = {\r\n            ...tutor,\r\n            email,\r\n            name\r\n        }\r\n        editTutor(tutor, history, '/dashboard/tutors/');\r\n    }\r\n\r\n    const onConfirm = () => {\r\n        deleteTutor(id, history, '/dashboard/tutors/');\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Edit tutor</h1>\r\n            <p>\r\n                Edit the tutors information.\r\n        </p>\r\n            <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} size=\"large\" spinning={loading}>\r\n                <Form form={form} onFinish={onFinish}>\r\n                    <Form.Item name=\"email\" rules={[{ required: true, message: 'Please input email!' }]}>\r\n                        <Input\r\n                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Email of tutor\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input name!' }]}>\r\n                        <Input\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Name of tutor\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    {/* <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input your Password!' }]}>\r\n                    <Input\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item name=\"password2\" rules={[{ required: true, message: 'Please input your Password!' }]}>\r\n                    <Input\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    />\r\n                </Form.Item> */}\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Edit tutor\r\n                </Button><br></br><br></br>\r\n                    <Popconfirm title=\"Are you sure that you want to delete the tutor?\"\r\n                        okText=\"Yes\" cancelText=\"No\" onConfirm={onConfirm} okType=\"danger\"\r\n                        icon={<QuestionCircleOutlined style={{ color: 'red' }}></QuestionCircleOutlined>} >\r\n                        <Button type=\"primary\" danger>\r\n                            Delete the tutor\r\n                    </Button>\r\n                    </Popconfirm>\r\n                </Form>\r\n            </Spin>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nEditTutor.propTypes = {\r\n    tutors: PropTypes.array.isRequired,\r\n    editTutor: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    tutors: state.admin.tutors,\r\n    loading: state.admin.loading\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { editTutor, deleteTutor }\r\n)(EditTutor);","import React, { useEffect } from 'react';\nimport { Form, Input, Button, Spin, Popconfirm } from 'antd';\nimport { LoadingOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { Icon } from '@ant-design/compatible';\nimport { useParams, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { editStudent, deleteStudent } from '../../../actions/adimnActions';\nimport { Fragment } from 'react';\n\nconst EditStudent = ({ students, editStudent, deleteStudent, loading }) => {\n    const history = useHistory();\n    const [form] = Form.useForm();\n    let { id } = useParams();\n    let student;\n\n    useEffect(() => {\n        student = students.find(elm => elm._id === id);\n\n        if (student) {\n            form.setFieldsValue({\n                email: student.email,\n                name: student.name\n            });\n        }\n    });\n\n    const onFinish = values => {\n        const { email, name } = values;\n        student = {\n            ...student,\n            email,\n            name\n        }\n        editStudent(student, history, '/dashboard/students/');\n    }\n\n    const onConfirm = () => {\n        deleteStudent(id, history, '/dashboard/students/');\n    }\n\n    return (\n        <Fragment>\n            <h1>Edit student</h1>\n            <p>\n                Edit the student information.\n        </p>\n            <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} size=\"large\" spinning={loading}>\n                <Form form={form} onFinish={onFinish}>\n                    <Form.Item name=\"email\" rules={[{ required: true, message: 'Please input email!' }]}>\n                        <Input\n                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"Email of student\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input name!' }]}>\n                        <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"Name of student\"\n                        />\n                    </Form.Item>\n\n                    {/* <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input your Password!' }]}>\n                    <Input\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    />\n                </Form.Item>\n\n                <Form.Item name=\"password2\" rules={[{ required: true, message: 'Please input your Password!' }]}>\n                    <Input\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    />\n                </Form.Item> */}\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Edit student\n                </Button><br></br><br></br>\n                    <Popconfirm title=\"Are you sure that you want to delete the student?\"\n                        okText=\"Yes\" cancelText=\"No\" onConfirm={onConfirm} okType=\"danger\"\n                        icon={<QuestionCircleOutlined style={{ color: 'red' }}></QuestionCircleOutlined>} >\n                        <Button type=\"primary\" danger>\n                            Delete the student\n                    </Button>\n                    </Popconfirm>\n                </Form>\n            </Spin>\n        </Fragment>\n    );\n}\n\nEditStudent.propTypes = {\n    students: PropTypes.array.isRequired,\n    editStudent: PropTypes.func.isRequired,\n    loading: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    students: state.admin.students,\n    loading: state.admin.loading\n});\n\nexport default connect(\n    mapStateToProps,\n    { editStudent, deleteStudent }\n)(EditStudent);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Skeleton } from 'antd';\n\nconst HomeDashboard = ({ auth }) => {\n    let tag = auth.loading ? null :\n        <h1>Welcome {auth.user.name} to the {auth.user.kind}s Home Dashboard</h1>\n\n    return (\n        <>\n            <Fragment>\n                <Skeleton loading={auth.loading}>\n                    {tag}\n                </Skeleton>\n            </Fragment>\n        </>\n    );\n}\n\nHomeDashboard.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n})\n\n\nexport default connect(mapStateToProps)(HomeDashboard);","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Input, Button, Checkbox, Form, Spin } from 'antd';\nimport { Icon } from '@ant-design/compatible';\nimport { setAlert } from '../../../actions/alert';\nimport { addClassroom, getClassrooms } from '../../../actions/adimnActions';\nimport { useHistory } from 'react-router-dom';\nimport { LoadingOutlined } from '@ant-design/icons';\n\n\n\nconst AddClassroom = ({ setAlert, addClassroom, loading, classrooms, getClassrooms }) => {\n\n    useEffect(() => {\n        getClassrooms();\n    }, []);\n\n    const history = useHistory();\n    const [form] = Form.useForm();\n    const onFinish = values => {\n        const { id, tutor, Private, record } = values;\n        for (let classroom of classrooms) {\n            if (classroom.id === id) {\n                setAlert('This classroom already exsist !', 'error');\n                return;\n            }\n        }\n        addClassroom({ id, tutor, Private, record }, history, '/dashboard/classrooms/');\n    }\n\n    return (\n        <Fragment>\n            <h1>Add a New Classroom</h1>\n            <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} size=\"large\" spinning={loading}>\n                <Form form={form} onFinish={onFinish} initialValues={{ Private: false, record: false }}>\n                    <Form.Item name=\"id\" rules={[{ required: true, message: 'Please input the course id!' }]}>\n                        <Input\n                            prefix={<Icon type=\"video-camera\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"Classroom ID\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"tutor\" rules={[{ required: true, message: 'Please input the tutor email!' }]}>\n                        <Input\n                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"Email of new classroom's tutor\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"Private\" valuePropName=\"checked\">\n                        <Checkbox>Private</Checkbox>\n                    </Form.Item>\n\n                    <Form.Item name=\"record\" valuePropName=\"checked\">\n                        <Checkbox>Recored Lecture</Checkbox>\n                    </Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Add Classroom\n                </Button>\n                </Form>\n            </Spin>\n        </Fragment>\n    );\n}\n\nAddClassroom.propTypes = {\n    admin: PropTypes.object.isRequired,\n    addClassroom: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    getClassrooms: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    admin: state.auth.user,\n    loading: state.auth.loading,\n    classrooms: state.admin.classrooms\n})\n\n// const Wrapped = Form.create({ name: 'AddClassroom' })(AddClassroom);\n\nexport default connect(mapStateToProps, { setAlert, addClassroom, getClassrooms })(AddClassroom);","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { List, Card } from 'antd';\nimport { connect } from 'react-redux';\nimport { getClassrooms } from '../../../actions/adimnActions';\nimport { Link } from 'react-router-dom';\n\nconst GetClassrooms = ({ getClassrooms, loading, classrooms }) => {\n    useEffect(() => {\n        getClassrooms();\n    }, []);\n    return (\n        <Fragment>\n            <h1>All Classrooms</h1>\n            <List\n                loading={loading}\n                grid={{ gutter: 16, column: 4 }}\n                dataSource={classrooms}\n                renderItem={item => (\n                    <List.Item>\n                        <Card title={item.id}><Link to={`/dashboard/classrooms/${item.id}`}>View Classroom Information</Link></Card>\n                    </List.Item>\n                )}\n            />\n        </Fragment>\n    )\n}\n\nGetClassrooms.propTypes = {\n    admin: PropTypes.object.isRequired,\n    getClassrooms: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    admin: state.auth.user,\n    classrooms: state.admin.classrooms,\n    loading: state.admin.loading\n})\n\nexport default connect(mapStateToProps, { getClassrooms })(GetClassrooms);","import React, { useEffect } from 'react';\nimport { Form, Input, Button, Spin, Checkbox, Popconfirm } from 'antd';\nimport { LoadingOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { Icon } from '@ant-design/compatible';\nimport { useParams, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { editClassroom, deleteClassroom } from '../../../actions/adimnActions';\nimport { Fragment } from 'react';\nimport { setAlert } from '../../../actions/alert';\nimport { EditFilled, DeleteFilled } from '@ant-design/icons';\n\nconst EditClassroom = ({ classrooms, editClassroom, deleteClassroom, loading }) => {\n    const history = useHistory();\n    const [form] = Form.useForm();\n    let { id } = useParams();\n    let classroom;\n\n    useEffect(() => {\n        classroom = classrooms.find(elm => elm.id === id);\n\n        if (classroom) {\n            form.setFieldsValue({\n                newId: classroom.id,\n                email: classroom.tutor.email,\n                Private: false,\n                record: false\n            });\n        }\n    });\n\n\n    const onFinish = values => {\n        const { newId, email, Private, record } = values;\n        classroom = {\n            ...classroom,\n            newId,\n            email,\n            Private,\n            record\n        }\n        if (!newId || Private === undefined || record === undefined || !email) {\n            setAlert(\"please provide all fields\", 'error');\n        } else {\n            editClassroom(classroom, newId, history, '/dashboard/classrooms/');\n        }\n    }\n\n    const onConfirm = () => {\n        deleteClassroom(id, history, '/dashboard/classrooms/');\n    }\n\n    return (\n        <Fragment>\n            <h1>Edit Classroom</h1>\n            {/* <p>\n                Edit the classroom's information.\n        </p> */}\n            <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} size=\"large\" spinning={loading}>\n                <Form form={form} onFinish={onFinish} className=\"center-form\">\n                    <Form.Item name=\"newId\" label=\"Classroom ID\" rules={[{ required: true, message: 'Please input id!' }]}>\n                        <Input\n                            prefix={<Icon type=\"video-camera\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"id of classroom\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"email\" label=\"Tutor's email\" rules={[{ required: true, message: 'Please input email of tutor!' }]}>\n                        <Input\n                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"email of tutor\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"Private\" valuePropName=\"checked\">\n                        <Checkbox>Private</Checkbox>\n                    </Form.Item>\n\n                    <Form.Item name=\"record\" valuePropName=\"checked\">\n                        <Checkbox>Recored Lecture</Checkbox>\n                    </Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" icon={<EditFilled />}>\n                        Submit\n                </Button>\n                    <br></br><br></br>\n                    <Popconfirm title=\"Are you sure that you want to delete the classroom?\"\n                        okText=\"Yes\" cancelText=\"No\" onConfirm={onConfirm} okType=\"danger\"\n                        icon={<QuestionCircleOutlined style={{ color: 'red' }}></QuestionCircleOutlined>} >\n                        <Button type=\"primary\" danger icon={<DeleteFilled />}>\n                            Delete the classroom\n                    </Button>\n                    </Popconfirm>\n                </Form>\n            </Spin>\n        </Fragment>\n    );\n}\n\nEditClassroom.propTypes = {\n    classrooms: PropTypes.array.isRequired,\n    editClassroom: PropTypes.func.isRequired,\n    loading: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    classrooms: state.admin.classrooms,\n    loading: state.admin.loading\n});\n\nexport default connect(\n    mapStateToProps,\n    { editClassroom, deleteClassroom }\n)(EditClassroom);","import React, { Fragment } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport TutorsList from './TutorsList';\nimport AddAdmin from './AddAdmin';\nimport { Layout } from \"antd\";\nimport AdminSidebar from './AdminSidebar';\nimport StudentsList from './StudentsList';\nimport EditTutor from './EditTutor';\nimport EditStudent from './EditStudent';\nimport HomeDashboard from '../HomeDashboard';\nimport AddClassroom from './AddClassroom';\nimport GetClassrooms from './GetClassrooms';\nimport EditClassroom from './EditClassroom';\n\n\nconst { Content, Sider } = Layout;\n\nconst AdminDashboard = () => {\n    return (\n        <Fragment>\n            <Sider>\n                <AdminSidebar />\n            </Sider>\n            <Content>\n                {/* { content } */}\n                <Switch>\n                    <Route path=\"/dashboard/tutor/:id\" component={EditTutor} />\n                    <Route path=\"/dashboard/tutors\" component={TutorsList} />\n                    <Route path=\"/dashboard/addAdmin\" component={AddAdmin} />\n                    <Route path=\"/dashboard/student/:id\" component={EditStudent} />\n                    <Route path=\"/dashboard/students\" component={StudentsList} />\n                    <Route path=\"/dashboard/addClassroom\" component={AddClassroom} />\n                    <Route path=\"/dashboard/classrooms/:id\" component={EditClassroom} />\n                    <Route path=\"/dashboard/classrooms\" component={GetClassrooms} />\n                    <Route path='/dashboard' component={HomeDashboard} />\n                </Switch>\n            </Content>\n        </Fragment>\n    );\n}\n\n// Dashboard.propTypes = {\n//     isAuthenticated: PropTypes.bool\n// }\n\n// const mapStateToProps = state => ({\n//     isAuthenticated: state.auth.isAuthenticated\n// });\n\n// export default connect(mapStateToProps)(Dashboard);\nexport default AdminDashboard;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon as LegacyIcon } from '@ant-design/compatible';\nimport { Menu } from 'antd';\nimport { HomeOutlined, VideoCameraOutlined } from '@ant-design/icons';\n\n\nconst TutorSidebar = () => {\n    return (\n        <Fragment>\n            <Menu theme=\"dark\" mode=\"inline\" >\n                <Menu.Item key=\"home\">\n                    <Link to=\"/dashboard\">\n                        <HomeOutlined />\n                    Home</Link>\n                </Menu.Item>\n                <Menu.Item key=\"my-classrooms\">\n                    <Link to=\"/dashboard/myClassrooms\">\n                        <VideoCameraOutlined />\n                        My Classrooms</Link>\n                </Menu.Item>\n            </Menu>\n        </Fragment>\n    );\n}\n\n\nexport default TutorSidebar;","import {\n    GET_TUTOR_LECTURES,\n    GET_TUTOR_CLASSROOMS,\n    GET_STUDENTS_OF_CLASSROOM,\n    GET_STUDENTS_OF_CLASSROOM_FAIL,\n    GET_STUDENTS_OF_CLASSROOM_SUCCESS,\n    DELETE_STUDENT_FROM_CLASSROOM,\n    DELETE_STUDENT_FROM_CLASSROOM_SUCCESS,\n    DELETE_STUDENT_FROM_CLASSROOM_FAIL,\n    ADD_STUDENT_TO_CLASSROOM,\n    ADD_STUDENT_TO_CLASSROOM_SUCCESS,\n    ADD_STUDENT_TO_CLASSROOM_FAIL\n} from './types';\nimport { setAlert } from './alert';\nimport Config from '../Config';\nimport axios from 'axios';\nconst URL = Config.URL.Server;\n\nexport const getLectures = (user) => async dispatch => {\n    try {\n        const lectures = await axios.get(URL + `/api/classrooms/tutor/${user._id}/lectures`);\n        dispatch({\n            type: GET_TUTOR_LECTURES,\n            payload: lectures.data\n        });\n    } catch (err) {\n        if (err.response) {\n            const errors = err.response.data.errors;\n            for (let error of errors)\n                dispatch(setAlert(error.msg, 'error', 12000));\n        }\n\n        console.log('Error', err);\n    }\n}\n\nexport const getClassrooms = (user) => async dispatch => {\n    try {\n        const classrooms = await axios.get(URL + `/api/classrooms/tutor/${user._id}`);\n\n        dispatch({\n            type: GET_TUTOR_CLASSROOMS,\n            payload: classrooms.data\n        });\n    } catch (err) {\n        if (err.response) {\n            const errors = err.response.data.errors;\n            for (let error of errors)\n                dispatch(setAlert(error.msg, 'error', 12000));\n        }\n\n        console.log('Error', err);\n    }\n}\n\nexport const addStudentToClassroom = (email, id, history, redirectPath) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        dispatch({\n            type: ADD_STUDENT_TO_CLASSROOM\n        })\n        const student = await axios.post(URL + `/api/classroom/${id}/students/${email}`)\n        dispatch({\n            type: ADD_STUDENT_TO_CLASSROOM_SUCCESS,\n            payload: student.data\n        })\n        history.push(redirectPath);\n    } catch (err) {\n        dispatch({\n            type: ADD_STUDENT_TO_CLASSROOM_FAIL\n        })\n        if (err.response) {\n            const errors = err.response.data.errors;\n            for (let error of errors) {\n                dispatch(setAlert(error.msg, 'error', 12000));\n            }\n            console.log('Error', err);\n        }\n    }\n}\n\nexport const deleteStudentFromClassroom = (email, id, history, redirectPath) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        dispatch({\n            type: DELETE_STUDENT_FROM_CLASSROOM\n        })\n        const students = await axios.delete(URL + `/api/classroom/${id}/students/${email}`, config);\n        dispatch({\n            type: DELETE_STUDENT_FROM_CLASSROOM_SUCCESS,\n            payload: students.data\n        })\n        history.push(redirectPath);\n    } catch (err) {\n        if (err.response) {\n            dispatch({\n                type: DELETE_STUDENT_FROM_CLASSROOM_FAIL\n            })\n            const errors = err.response.data.errors;\n            for (let error of errors) {\n                dispatch(setAlert(error.msg, 'error', 12000));\n            }\n            console.log('Error', err);\n        }\n    }\n}\n\nexport const getStudentsFromClassroom = (id, history, redirectPath) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        dispatch({\n            type: GET_STUDENTS_OF_CLASSROOM\n        })\n        const students = await axios.get(URL + `/api/classroom/${id}/students`, config);\n        dispatch({\n            type: GET_STUDENTS_OF_CLASSROOM_SUCCESS,\n            payload: students.data\n        })\n        history.push(redirectPath);\n    } catch (err) {\n        dispatch({\n            type: GET_STUDENTS_OF_CLASSROOM_FAIL\n        })\n        if (err.response) {\n            const errors = err.response.data.errors;\n            for (let error of errors) {\n                dispatch(setAlert(error.msg, 'error', 12000));\n            }\n            console.log('Error', err);\n        }\n    }\n}","import React, { Fragment, useEffect } from 'react';\nimport { List, Card } from 'antd';\nimport { connect } from 'react-redux';\nimport { getLectures } from '../../../actions/tutorActions';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nconst MyLectures = ({ tutor, lectures, loading, getLectures }) => {\n    const { id } = useParams();\n    let idLectures = [];\n    for (let lecture of lectures) {\n        if (lecture.id === id) {\n            idLectures.push(lecture);\n        }\n    }\n    useEffect(() => {\n        getLectures(tutor);\n    }, []);\n\n    return (\n        <Fragment>\n            <List\n                loading={loading}\n                grid={{ gutter: 16, column: 4 }}\n                dataSource={idLectures}\n                renderItem={item => (\n                    <List.Item>\n                        <Card title={item.id}><div>Started On: {item.pastLectures.startedOn}<br></br> Ended On: {item.pastLectures.endedOn}</div>\n                            <div>Attendance:<br></br> {\n                                item.pastLectures.attendance ?\n                                    item.pastLectures.attendance.map(t => <Fragment><p>{'user:' + t.user + ' duration:' + t.duration}</p></Fragment>) : <Fragment><div>No One.</div></Fragment>}</div></Card>\n                    </List.Item>\n                )}\n            />\n        </Fragment>\n    )\n}\n\nMyLectures.propTypes = {\n    lectures: PropTypes.array,\n    loading: PropTypes.bool,\n    getLectures: PropTypes.func.isRequired,\n    tutor: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n    tutor: state.auth.user,\n    lectures: state.tutor.lectures,\n    loading: state.tutor.loading\n})\n\nexport default connect(mapStateToProps, { getLectures })(MyLectures);","import React, { Fragment, useEffect } from 'react';\nimport { List, Card, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { getClassrooms } from '../../../actions/tutorActions';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nconst MyClassrooms = ({ tutor, classrooms, loading, getClassrooms }) => {\n\n    useEffect(() => {\n        getClassrooms(tutor);\n    }, []);\n\n    return (\n        <Fragment>\n            <List\n                loading={loading}\n                grid={{ gutter: 16, column: 4 }}\n                dataSource={classrooms}\n                renderItem={item => (\n                    <List.Item>\n                        <Card theme=\"dark\" className=\"classroom-card\" title={item.id} extra={<Link to={`/dashboard/classroom/${item.id}/info`}>Edit Info</Link>}>\n                            <Button type=\"primary\" href={`/classroom/${item.id}/tutor`}>Go to Classroom</Button>\n                            <Button href={`/dashboard/classroom/${item.id}/lectures`}>View Lectures</Button>\n                        </Card>\n                    </List.Item>\n                )}\n            />\n        </Fragment>\n    )\n}\n\nMyClassrooms.propTypes = {\n    classrooms: PropTypes.array,\n    loading: PropTypes.bool,\n    getClassrooms: PropTypes.func.isRequired,\n    tutor: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n    tutor: state.auth.user,\n    classrooms: state.tutor.classrooms,\n    loading: state.tutor.loading\n})\n\nexport default connect(mapStateToProps, { getClassrooms })(MyClassrooms);","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    getClassrooms,\n    getStudentsFromClassroom,\n    addStudentToClassroom,\n    deleteStudentFromClassroom\n}\n    from '../../../actions/tutorActions';\nimport PropTypes from 'prop-types';\nimport { Card, Checkbox, Input, List, Button, Popconfirm, Form, Skeleton } from 'antd';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Icon } from '@ant-design/compatible';\nconst MyClassroomInfo = ({ getClassrooms, addStudentToClassroom, deleteStudentFromClassroom,\n    getStudentsFromClassroom, classrooms, students, tutor }) => {\n    const [form] = Form.useForm();\n    const [form2] = Form.useForm();\n    const { id } = useParams();\n    const history = useHistory();\n    console.log(id);\n\n    const redirectPath = `/dashboard/classroom/${id}/info`;\n    let classroom;\n    useEffect(() => {\n        async function getClassroom() {\n            await getClassrooms(tutor._id);\n            classroom = classrooms.find((e) => {\n                return e.id === id;\n            });\n        }\n        getClassroom();\n    }, [])\n    const viewStudents = () => {\n        console.log(id);\n\n        getStudentsFromClassroom(id, history, redirectPath);\n    }\n    const addStudent = values => {\n        const { email } = values\n        console.log(email);\n\n        addStudentToClassroom(email, id, history, redirectPath);\n    }\n    const deleteStudent = values => {\n        const { email } = values\n        console.log(email);\n\n        deleteStudentFromClassroom(email, id, history, redirectPath)\n    }\n\n    return (\n        <Fragment>\n            {classroom ? (\n                <Card title={classroom.id}>\n                    <Checkbox disabled defaultChecked={classroom.private}>Private</Checkbox><br></br>\n                    <Checkbox disabled defaultChecked={classroom.recordLectures}>Record Lectures</Checkbox><hr></hr>\n                    <Form form={form} onFinish={viewStudents}>\n                        <Button htmlType=\"submit\">view students</Button><br></br>\n                    </Form>\n                    <List dataSource={students}\n                        renderItem={item => (\n                            <List.Item key={item._id}><List.Item.Meta\n                                title={item.name} description={item.email}\n                            /></List.Item>\n                        )}\n                    >\n                    </List><hr></hr>\n                    <Form form={form2} onFinish={addStudent}>\n                        Add or delete a student to the classroom <br></br><br></br>\n                        <Input type=\"text\" prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"email of the student\" id=\"email\" /><br></br><br></br>\n                        <Button type=\"primary\" htmlType=\"submit\">Add the student</Button>\n                        <Popconfirm title=\"Are you sure that you want to delete the student?\"\n                            okText=\"Yes\" cancelText=\"No\" onConfirm={deleteStudent} okType=\"danger\"\n                            icon={<QuestionCircleOutlined style={{ color: 'red' }}></QuestionCircleOutlined>} >\n                            <Button type=\"primary\" danger>\n                                Delete the student\n                    </Button></Popconfirm>\n                    </Form>\n                </Card>\n            ) : (<Skeleton active loading={true}></Skeleton>)}\n        </Fragment>\n    )\n}\nMyClassroomInfo.propTypes = {\n    getStudentsFromClassroom: PropTypes.func.isRequired,\n    addStudentToClassroom: PropTypes.func.isRequired,\n    deleteStudentFromClassroom: PropTypes.func.isRequired,\n    getClassrooms: PropTypes.func.isRequired\n}\nconst mapStateToProps = (state) => ({\n    classrooms: state.tutor.classrooms,\n    students: state.tutor.students,\n    tutor: state.auth.user\n})\n\nexport default connect(mapStateToProps, {\n    getClassrooms, addStudentToClassroom, getStudentsFromClassroom\n    , deleteStudentFromClassroom\n})(MyClassroomInfo);","import React, { Fragment } from 'react';\nimport { Layout } from 'antd';\nimport { Switch, Route } from 'react-router-dom';\n\nimport TutorSidebar from './TutorSidebar';\nimport MyLectures from './MyLectures';\nimport MyClassrooms from './MyClassrooms'\nimport HomeDashboard from '../HomeDashboard';\nimport MyClassroomInfo from './MyClassroomInfo';\n\nconst { Content, Sider } = Layout;\n\nconst TutorDashboard = () => {\n    return (\n        <Fragment>\n            <Sider>\n                <TutorSidebar />\n            </Sider>\n            <Content>\n                <Switch>\n                    <Route path=\"/dashboard/classroom/:id/info\" component={MyClassroomInfo} />\n                    <Route path=\"/dashboard/classroom/:id/lectures\" component={MyLectures} />\n                    <Route path=\"/dashboard/myClassrooms\" component={MyClassrooms} />\n                    <Route path='/dashboard' component={HomeDashboard} />\n                </Switch>\n            </Content>\n        </Fragment>\n    );\n}\n\n\nexport default TutorDashboard;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon as LegacyIcon } from '@ant-design/compatible';\nimport { Menu } from 'antd';\n\nconst StudentSidebar = () => {\n    return (\n        <Fragment>\n            <Menu theme=\"dark\" mode=\"inline\" >\n                <Menu.Item key=\"home\">\n                    <Link to=\"/dashboard\">\n                        <LegacyIcon type=\"user\" />\n                    Home</Link>\n                </Menu.Item>\n                <Menu.Item key=\"my-classrooms\">\n                    <Link to=\"/dashboard/myClassrooms\">\n                        <LegacyIcon type=\"video-camera\" />\n                    My classrooms</Link>\n                </Menu.Item>\n            </Menu>\n        </Fragment>\n    );\n}\n\n\nexport default StudentSidebar;","import {\n    GET_STUDENT_LECTURES,\n    GET_STUDENT_CLASSROOMS\n} from './types';\nimport { setAlert } from './alert';\nimport Config from '../Config';\nimport axios from 'axios';\nconst URL = Config.URL.Server;\n\nexport const getLectures = (user) => async dispatch => {\n    try {\n        const lectures = await axios.get(URL + `/api/classrooms/student/${user._id}/lectures`);\n        dispatch({\n            type: GET_STUDENT_LECTURES,\n            payload: lectures.data\n        });\n    } catch (err) {\n        if (err.response) {\n            const errors = err.response.data.errors;\n            for (let error of errors)\n                dispatch(setAlert(error.msg, 'error', 12000));\n        }\n\n        console.log('Error', err);\n    }\n}\n\nexport const getClassrooms = (user) => async dispatch => {\n    try {\n        const classrooms = await axios.get(URL + `/api/classrooms/student/${user._id}`);\n\n\n        dispatch({\n            type: GET_STUDENT_CLASSROOMS,\n            payload: classrooms.data\n        });\n    } catch (err) {\n        if (err.response) {\n            const errors = err.response.data.errors;\n            for (let error of errors)\n                dispatch(setAlert(error.msg, 'error', 12000));\n        }\n\n        console.log('Error', err);\n    }\n}","import React, { Fragment, useEffect } from 'react';\nimport { List, Card } from 'antd';\nimport { connect } from 'react-redux';\nimport { getClassrooms } from '../../../actions/studentActions';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MyClassrooms = ({ student, classrooms, loading, getClassrooms }) => {\n\n    useEffect(() => {\n        getClassrooms(student);\n    }, []);\n\n    return (\n        <Fragment>\n            <List\n                loading={loading}\n                grid={{ gutter: 16, column: 4 }}\n                dataSource={classrooms}\n                renderItem={item => (\n                    <List.Item>\n                        <Card title={item.id}>\n                            <Link to={`/classroom/${item.id}`}>go to the classroom</Link><br></br>\n                            given by: {item.tutor.name}<br></br>\n                            <Link>view recorded lectures</Link>\n                        </Card>\n                    </List.Item>\n                )}\n            />\n        </Fragment>\n    )\n}\n\nMyClassrooms.propTypes = {\n    classrooms: PropTypes.array,\n    loading: PropTypes.bool,\n    getClassrooms: PropTypes.func.isRequired,\n    student: PropTypes.object\n};\n\nconst mapStateToProps = (state) => ({\n    student: state.auth.user,\n    classrooms: state.student.classrooms,\n    loading: state.student.loading\n})\n\nexport default connect(mapStateToProps, { getClassrooms })(MyClassrooms);","import React, { Fragment } from 'react';\nimport { Layout } from 'antd';\nimport { Switch, Route } from 'react-router-dom';\n\nimport StudentSidebar from './StudentSidebar';\nimport MyClassrooms from './MyClassrooms';\nimport HomeDashboard from '../HomeDashboard';\n\nconst { Content, Sider } = Layout;\n\nconst StudentDashboard = () => {\n    return (\n        <Fragment>\n            <Sider>\n                <StudentSidebar />\n            </Sider>\n            <Content>\n                <Switch>\n                    <Route path=\"/dashboard/myClassrooms\" component={MyClassrooms} />\n                    <Route path='/dashboard' component={HomeDashboard} />\n                </Switch>\n            </Content>\n        </Fragment>\n    )\n}\n\n\nexport default StudentDashboard;","import AdminDashboard from './admin/AdminDashboard';\nimport TutorDashboard from './tutor/TutorDashboard';\nimport StudentDashboard from './student/StudentDashboard';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nconst MainDashboard = ({ userKind }) => {\n\n    if (userKind === 'Administrator') {\n        return (\n            <AdminDashboard />\n        );\n    }\n    if (userKind === 'Tutor') {\n        return (\n            <TutorDashboard />\n        );\n    }\n    if (userKind === 'Student') {\n        return (\n            <StudentDashboard />\n        );\n    }\n\n    return <Redirect to=\"/\" />;\n}\n\nMainDashboard.propTypes = {\n    userKind: PropTypes.string.isRequired,\n};\n\nexport default MainDashboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, Button, Radio } from 'antd';\nimport { DownloadOutlined } from '@ant-design/icons';\nimport config from '../../../Config';\n\nconst ChatMessage = ({ message, senderFirstName, color, type }) => {\n    const m = () => {\n        switch (type) {\n            case \"text\":\n                return (\n                    <div className=\"talktext\">\n                        <p>{message}</p>\n                    </div>\n                );\n            case \"image\":\n                return (\n                    <img className=\"img-attachment\" src={`${config.URL.Server}/${message}`} />\n                );\n            case \"file\":\n                let filename = /([^\\/]+$)/.exec(message)[0];\n                return (\n                    <Button className=\"file-attachment\" type=\"link\" href={`${config.URL.Server}/${message}`} target=\"_blank\">{filename} <DownloadOutlined /></Button>\n                );\n        }\n    }\n\n    return (\n        <div className=\"chat-message\">\n            <div className=\"avatar\">\n                <Avatar style={{ backgroundColor: color, verticalAlign: 'middle' }} size=\"large\">\n                    {senderFirstName}\n                </Avatar>\n            </div>\n            <div className=\"talk-bubble tri-right left-in round\">\n                {m()}\n            </div>\n        </div>\n    )\n}\n\nChatMessage.propTypes = {\n    message: PropTypes.string.isRequired,\n    senderFirstName: PropTypes.string.isRequired\n}\n\nexport default ChatMessage;","/**\n *\n * @returns\n */\n\n\"use strict\";\n\nexport default function WebRTCAdaptor(initialValues)\n{\n\n\tclass PeerStats {\n\n\t\tconstructor(streamId) {\n\t\t\tthis.streamId = streamId;\n\t\t\tthis.totalBytesReceivedCount = 0;\n\t\t\tthis.totalBytesSent = 0;\n\t\t\tthis.packetsLost = 0;\n\t\t\tthis.fractionLost = 0;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.lastBytesReceived = 0;\n\t\t\tthis.lastBytesSent = 0;\n\t\t\tthis.currentTimestamp = 0;\n\t\t\tthis.lastTime = 0;\n\t\t\tthis.timerId = 0;\n\t\t\tthis.firstByteSentCount = 0;\n\t\t\tthis.firstBytesReceivedCount = 0;\n\t\t}\n\n\t\t//kbits/sec\n\t\tget averageOutgoingBitrate() {\n\t\t\treturn Math.floor(8 * (this.totalBytesSentCount - this.firstByteSentCount) / (this.currentTimestamp - this.startTime));\n\t\t}\n\n\t\t//kbits/sec\n\t\tget averageIncomingBitrate() {\n\t\t\treturn Math.floor(8 * (this.totalBytesReceivedCount - this.firstBytesReceivedCount) / (this.currentTimestamp - this.startTime));\n\t\t}\n\n\t\t//kbits/sec\n\t\tget currentOutgoingBitrate() {\n\t\t\treturn Math.floor(8 * (this.totalBytesSentCount - this.lastBytesSent) / (this.currentTimestamp - this.lastTime));\n\t\t}\n\n\t\t//kbits/sec\n\t\tget currentIncomingBitrate() {\n\t\t\treturn Math.floor(8 * (this.totalBytesReceivedCount - this.lastBytesReceived) / (this.currentTimestamp - this.lastTime));\n\t\t}\n\n\t\tset currentTime(timestamp) {\n\t\t\tthis.lastTime = this.currentTimestamp;\n\t\t\tthis.currentTimestamp = timestamp;\n\t\t\tif (this.startTime == 0) {\n\t\t\t\tthis.startTime = timestamp-1; // do not have zero division error\n\t\t\t}\n\t\t}\n\n\t\tset totalBytesReceived(bytesReceived) {\n\t\t\tthis.lastBytesReceived = this.totalBytesReceivedCount;\n\t\t\tthis.totalBytesReceivedCount = bytesReceived;\n\t\t\tif (this.firstBytesReceivedCount == 0) {\n\t\t\t\tthis.firstBytesReceivedCount = bytesReceived;\n\t\t\t}\n\t\t}\n\n\t\tset totalBytesSent(bytesSent) {\n\t\t\tthis.lastBytesSent = this.totalBytesSentCount;\n\t\t\tthis.totalBytesSentCount = bytesSent;\n\t\t\tif (this.firstByteSentCount == 0) {\n\t\t\t\tthis.firstByteSentCount = bytesSent;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tvar thiz = this;\n\tthiz.peerconnection_config = null;\n\tthiz.sdp_constraints = null;\n\tthiz.remotePeerConnection = new Array();\n\tthiz.remotePeerConnectionStats = new Array();\n\tthiz.remoteDescriptionSet = new Array();\n\tthiz.iceCandidateList = new Array();\n\tthiz.webSocketAdaptor = null;\n\tthiz.roomName = null;\n\tthiz.videoTrackSender = null;\n\tthiz.audioTrackSender = null;\n\tthiz.playStreamId = new Array();\n\tthiz.micGainNode = null;\n\tthiz.localStream = null;\n\tthiz.bandwidth = 900; //default bandwidth kbps\n\tthiz.isMultiPeer = false; //used for multiple peer client\n\tthiz.multiPeerStreamId = null;   //used for multiple peer client\n\t\n\tthiz.isPlayMode = false;\n\tthiz.debug = false;\n\t\n\tthiz.publishMode=\"camera\"; //screen, screen+camera\n\n\t/**\n\t * Supported candidate types. Below types are for both sending and receiving candidates. \n\t * It means if when client receives candidate from STUN server, it sends to the server if candidate's protocol\n\t * is in the list. Likely, when client receives remote candidate from server, it adds as ice candidate\n\t * if candidate protocol is in the list below.\n\t */\n\tthiz.candidateTypes = [\"udp\", \"tcp\"];\n\n\n\tthiz.desktopStream = null;\n\n\t/**\n\t * The cam_location below is effective when camera and screen is send at the same time.\n\t * possible values are top and bottom. It's on right all the time\n\t */\n\tthiz.camera_location = \"top\"\n\n\t/**\n\t * The cam_margin below is effective when camera and screen is send at the same time.\n\t * This is the margin value in px from the edges \n\t */\t\n\tthiz.camera_margin = 15;\t\n\n\t/**\n\t * Thiz camera_percent is how large the camera view appear on the screen. It's %15 by default.\n\t */\n\tthiz.camera_percent = 15;\n\n\tfor(var key in initialValues) {\n\t\tif(initialValues.hasOwnProperty(key)) {\n\t\t\tthis[key] = initialValues[key];\n\t\t}\n\t}\n\n\tthiz.localVideo = document.getElementById(thiz.localVideoId);\n\tthiz.remoteVideo = document.getElementById(thiz.remoteVideoId);\n\t\n\t// It should be compatible previous version\n\tif(thiz.mediaConstraints.video == \"camera\") {\n\t\tthiz.publishMode=\"camera\";\n\t}\n\telse if(thiz.mediaConstraints.video == \"screen\") {\n\t\tthiz.publishMode=\"screen\";\n\t}\n\telse if(thiz.mediaConstraints.video == \"screen+camera\") {\n\t\tthiz.publishMode=\"screen+camera\";\n\t}\n\n\tif (!(\"WebSocket\" in window)) {\n\t\tconsole.log(\"WebSocket not supported.\");\n\t\tthiz.callbackError(\"WebSocketNotSupported\");\n\t\treturn;\n\t}\n\n\tif (typeof navigator.mediaDevices == \"undefined\" && thiz.isPlayMode == false) {\n\t\tconsole.log(\"Cannot open camera and mic because of unsecure context. Please Install SSL(https)\");\n\t\tthiz.callbackError(\"UnsecureContext\");\n\t\treturn;\n\t}\n\n\tthis.switchDesktopwithCameraSource = function(stream, streamId, audioStream, onEndedCallback) {\n\n\t\tthiz.desktopStream = stream;\n\n\t\tnavigator.mediaDevices.getUserMedia({video: true, audio: false})\n\t\t.then(function(cameraStream) {\n\n\t\t\t//create a canvas element\n\t\t\tvar canvas = document.createElement(\"canvas\");\n\t\t\tvar canvasContext = canvas.getContext(\"2d\");\n\n\t\t\t//create video element for screen\n\t\t\t//var screenVideo = document.getElementById('sourceVideo');\n\t\t\tvar screenVideo = document.createElement('video');\n\t\t\t//TODO: check audio track\n\t\t\tscreenVideo.srcObject = stream;\n\t\t\tscreenVideo.play();\n\t\t\t//create video element for camera\n\t\t\tvar cameraVideo = document.createElement('video');\n\t\t\t//TODO: check audio track\n\t\t\tcameraVideo.srcObject = cameraStream;\n\t\t\tcameraVideo.play();\n\t\t\tvar canvasStream = canvas.captureStream(15);\n\t\t\tcanvasStream.addTrack(audioStream.getAudioTracks()[0]);\n\n\t\t\tif(thiz.localStream == null){\n\t\t\t\tstream.addTrack(audioStream.getAudioTracks()[0]);\n\t\t\t\tthiz.gotStream(canvasStream);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthiz.switchDesktopSource(canvasStream,streamId,thiz.mediaConstraints,onended,null);\n\t\t\t}\n\n\t\t\t//update the canvas\n\t\t\tsetInterval(function(){\n\t\t\t\t//draw screen to canvas\n\t\t\t\tcanvas.width = screenVideo.videoWidth;\n\t\t\t\tcanvas.height = screenVideo.videoHeight;\n\t\t\t\tcanvasContext.drawImage(screenVideo, 0, 0, canvas.width, canvas.height);\n\n\t\t\t\tvar cameraWidth = screenVideo.videoWidth * (thiz.camera_percent/100);\n\t\t\t\tvar cameraHeight = (cameraVideo.videoHeight/cameraVideo.videoWidth)*cameraWidth\n\n\t\t\t\tvar positionX = (canvas.width - cameraWidth) - thiz.camera_margin;\n\t\t\t\tvar positionY;\n\n\t\t\t\tif (thiz.camera_location == \"top\") {\n\t\t\t\t\tpositionY = thiz.camera_margin;\n\t\t\t\t}\n\t\t\t\telse { //if not top, make it bottom\n\t\t\t\t\t//draw camera on right bottom corner\n\t\t\t\t\tpositionY = (canvas.height - cameraHeight) - thiz.camera_margin;\n\t\t\t\t}\n\t\t\t\tcanvasContext.drawImage(cameraVideo, positionX, positionY, cameraWidth, cameraHeight);\n\t\t\t}, 66);\n\n\n\t\t})\n\t\t.catch(function(error) {\n\t\t\tthiz.callbackError(error.name, error.message);\n\t\t});\n\t}\n\n\tthis.getUserMediaDetail = function (mediaConstraints,audioConstraint,stream, streamId) {\n\n\t\t//this trick, getting audio and video separately, make us add or remove tracks on the fly\n\t\tvar audioTrack = stream.getAudioTracks();\n\t\tif (audioTrack.length > 0) {\n\t\t\tstream.removeTrack(audioTrack[0]);\n\t\t}\n\n\t\t//add callback if desktop is sharing\n\t\tstream.getVideoTracks()[0].onended = function(event) {\n\t\t\tthiz.callback(\"screen_share_stopped\");\n\t\t\tthiz.switchVideoSource(streamId, mediaConstraints, null, true);\n\t\t}\n\n\t\t//now get only audio to add this stream\n\t\tif (audioConstraint != \"undefined\" && audioConstraint != false) {\n            var media_audio_constraint = { audio: audioConstraint};\n            console.log(media_audio_constraint);\n\t\t\tnavigator.mediaDevices.getUserMedia({audio: true})\n\t\t\t.then(function(audioStream) {\n\t\t\t\tif(thiz.publishMode == \"screen\"){\n\t\t\t\t\tconsole.log(streamId);\n\t\t\t\t\tstream.addTrack(audioStream.getAudioTracks()[0]);\n\t\t\t\t\tthiz.switchDesktopSource(stream,streamId,mediaConstraints,onended,true);\n\t\t\t\t}\n\t\t\t\telse if(thiz.publishMode == \"screen+camera\" ){\n\t\t\t\t\tthiz.switchDesktopwithCameraSource(stream,streamId,audioStream,onended);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tstream.addTrack(audioStream.getAudioTracks()[0]);\n\t\t\t\t\tthiz.gotStream(stream);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function(error) {\n                console.log(\"Hey! error\");\n\t\t\t\tthiz.callbackError(error.name, error.message);\n\t\t\t});\n\t\t}\n\t\telse {\n            console.log(\"I'm here...\");\n            navigator.mediaDevices.getUserMedia(media_audio_constraint).then(function(audioStream) {\n                stream.addTrack(audioStream.getAudioTracks()[0]);\n                thiz.gotStream(stream);\n            });\n\t\t}\n\t}\n\n\t/**\n\t * Get user media\n\t */\n\tthis.getUserMedia = function (mediaConstraints, audioConstraint, streamId) {\n\n\t\t// Check Media Constraint video value screen or screen + camera\n\t\tif(thiz.publishMode == \"screen+camera\" || thiz.publishMode == \"screen\"){\n            console.log(mediaConstraints);\n\t\t\tnavigator.mediaDevices.getDisplayMedia(mediaConstraints)\n\t\t\t.then(function(stream){\n\t\t\t\tthiz.getUserMediaDetail(mediaConstraints,audioConstraint,stream,streamId);\n\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tif (error.name === \"NotAllowedError\") {\n\t\t\t\t\tconsole.debug(\"Permission denied error\");\n\t\t\t\t\tthiz.callbackError(\"ScreenSharePermissionDenied\");\n\t\t\t\t\t\n\t\t\t\t\t// Redirect Default Stream Camera\n\t\t\t\t\tif(thiz.localStream == null){\n\n\t\t\t\t\t\tvar mediaConstraints = {\n\t\t\t\t\t\t\tvideo : true,\n\t\t\t\t\t\t\taudio : true\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthiz.openStream(mediaConstraints);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tthiz.switchVideoCapture(streamId);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthiz.callbackError(error.name, error.message);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// If mediaConstraints only user camera\n\t\telse {\n\t\t\tnavigator.mediaDevices.getUserMedia(mediaConstraints)\n\t\t\t.then(function(stream){\n\n\t\t\t\tthiz.getUserMediaDetail(mediaConstraints,audioConstraint,stream);\n\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tthiz.callbackError(error.name, error.message);\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Open media stream, it may be screen, camera or audio\n\t */\n\tthis.openStream = function(mediaConstraints) {\n\n\t\tthiz.mediaConstraints = mediaConstraints;\n\t\tvar audioConstraint = false;\n\t\tif (typeof mediaConstraints.audio != \"undefined\" && mediaConstraints.audio != false) {\n\t\t\taudioConstraint = mediaConstraints.audio;\n\t\t}\n\n\t\tif (typeof mediaConstraints.video != \"undefined\") {\n\t\t\tthiz.getUserMedia(mediaConstraints, audioConstraint);\n\t\t}\n\t\telse {\n\t\t\tconsole.error(\"MediaConstraint video is not defined\");\n\t\t\tthiz.callbackError(\"media_constraint_video_not_defined\");\n\t\t}\n\t}\n\n\t/**\n\t * Closes stream, if you want to stop peer connection, call stop(streamId)\n\t */\n\tthis.closeStream = function () {\n\n\t\tthiz.localStream.getVideoTracks().forEach(function(track) {\n\t\t\ttrack.onended = null;\n\t\t\ttrack.stop();\n\t\t});\n\n\t\tthiz.localStream.getAudioTracks().forEach(function(track) {\n\t\t\ttrack.onended = null;\n\t\t\ttrack.stop();\n\t\t});\n\n\t}\n\n\t/**\n\t * Checks browser supports screen share feature\n\t * if exist it calls callback with \"browser_screen_share_supported\"\n\t */\n\n\tthis.checkBrowserScreenShareSupported = function() {\n\t\tvar callback = function (message) {\n\n\t\t\tif (navigator.mediaDevices.getDisplayMedia || navigator.getDisplayMedia ) {\n\t\t\t\tthiz.callback(\"browser_screen_share_supported\");\n\t\t\t\twindow.removeEventListener(\"message\", callback);\n\t\t\t}\n\t\t};\n\n\t\t//add event listener for desktop capture\n\t\twindow.addEventListener(\"message\", callback, false);\n\n\t\twindow.postMessage(\"are-you-there\", \"*\");\n\n\t};\n\n\t/*\n\t * Call check browser support. Below function is called when this class is created\n\t */\n\n\tthiz.checkBrowserScreenShareSupported();\n\n\t/*\n\t * Below lines are executed as well when this class is created \n\t */\n\tif (!this.isPlayMode && typeof thiz.mediaConstraints != \"undefined\" && this.localStream == null)  \n\t{\n\t\tif (typeof thiz.mediaConstraints.video != \"undefined\" && thiz.mediaConstraints.video != false)\n\t\t{   \n\t\t\t// if it is not play mode and media constraint is defined, try to get user media\n\t\t\tif (thiz.mediaConstraints.audio.mandatory) \n\t\t\t{\n\t\t\t\t//this case captures mic and video(audio(screen audio) + video(screen)) and then provide mute/unmute mic with \n\t\t\t\t//enableMicInMixedAudio\n\t\t\t\tnavigator.mediaDevices.getUserMedia({audio:true, video:false}).then(function(micStream){\n\t\t\t\t\tnavigator.mediaDevices.getUserMedia(thiz.mediaConstraints)\n\t\t\t\t\t.then(function(stream) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t//console.debug(\"audio stream track count: \" + audioStream.getAudioTracks().length);\n\n\t\t\t\t\t\tvar audioContext = new AudioContext();\n\t\t\t\t\t\tvar desktopSoundGainNode = audioContext.createGain();\n\n\t\t\t\t\t\tdesktopSoundGainNode.gain.value = 1;\n\n\t\t\t\t\t\tvar audioDestionation = audioContext.createMediaStreamDestination();\n\t\t\t\t\t\tvar audioSource = audioContext.createMediaStreamSource(stream);\n\n\t\t\t\t\t\taudioSource.connect(desktopSoundGainNode);\n\n\t\t\t\t\t\tthiz.micGainNode = audioContext.createGain();\n\t\t\t\t\t\tthiz.micGainNode.gain.value = 1;\n\t\t\t\t\t\tvar audioSource2 = audioContext.createMediaStreamSource(micStream);\n\t\t\t\t\t\taudioSource2.connect(thiz.micGainNode);\n\n\t\t\t\t\t\tdesktopSoundGainNode.connect(audioDestionation);\n\t\t\t\t\t\tthiz.micGainNode.connect(audioDestionation);\n\n\t\t\t\t\t\tstream.removeTrack(stream.getAudioTracks()[0]);\n\t\t\t\t\t\taudioDestionation.stream.getAudioTracks().forEach(function(track) {\n\t\t\t\t\t\t\tstream.addTrack(track);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconsole.debug(\"Running gotStream\");\n\t\t\t\t\t\tthiz.gotStream(stream);\n\n\t\t\t\t\t\t\t}).catch(function (error) {\n\t\t\t\t\t\t\t\tthiz.callbackError(error.name, error.message);\n\t\t\t\t\t\t\t});\n\t\t\t\t}).catch(function(error) {\n\t\t\t\t\tthiz.callbackError(error.name, error.message);\n\t\t\t\t});\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//most of the times, this statement runs\n\t\t\t\tthiz.openStream(thiz.mediaConstraints, thiz.mode);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// get only audio\n\t\t\tvar media_audio_constraint = { audio: thiz.mediaConstraints.audio };\n\t\t\tnavigator.mediaDevices.getUserMedia(media_audio_constraint)\n\t\t\t.then(function(stream) {\n\t\t\t\tthiz.gotStream(stream);\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tthiz.callbackError(error.name, error.message);\n\t\t\t});\n\t\t}\n\t}\n\telse {\n\n\t\t//just playing, it does not open any stream\n\t\tif (thiz.webSocketAdaptor == null || thiz.webSocketAdaptor.isConnected() == false) {\n\t\t\tthiz.webSocketAdaptor = new WebSocketAdaptor();\n\t\t}\n\t}\n\n\tthis.enableMicInMixedAudio = function(enable) {\n\t\tif (thiz.micGainNode != null) {\n\t\t\tif (enable) {\n\t\t\t\tthiz.micGainNode.gain.value = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthiz.micGainNode.gain.value = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.publish = function (streamId, token) {\n\t\tvar jsCmd = {\n\t\t\t\tcommand : \"publish\",\n\t\t\t\tstreamId : streamId,\n\t\t\t\ttoken : token,\n\t\t\t\tvideo: thiz.localStream.getVideoTracks().length > 0 ? true : false,\n\t\t\t\t\t\taudio: thiz.localStream.getAudioTracks().length > 0 ? true : false,\n\t\t};\n\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\n\t}\n\n\n\tthis.joinRoom = function (roomName, streamId) {\n\t\tthiz.roomName = roomName;\n\n\t\tvar jsCmd = {\n\t\t\t\tcommand : \"joinRoom\",\n\t\t\t\troom: roomName,\n\t\t\t\tstreamId: streamId,\n\t\t}\n\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\n\n\t}\n\n\tthis.play = function (streamId, token, roomId, enableTracks) {\n\t\tthiz.playStreamId.push(streamId);\n\t\tvar jsCmd =\n\t\t{\n\t\t\t\tcommand : \"play\",\n\t\t\t\tstreamId : streamId,\n\t\t\t\ttoken : token,\n\t\t\t\troom : roomId,\n\t\t\t\ttrackList : enableTracks,\n\t\t}\n\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\n\t}\n\n\tthis.stop = function(streamId) {\n\t\tthiz.closePeerConnection(streamId);\n\n\t\tvar jsCmd = {\n\t\t\t\tcommand : \"stop\",\n\t\t\t\tstreamId: streamId,\n\t\t};\n\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\n\t}\n\n\tthis.join = function(streamId) {\n\t\tvar jsCmd = {\n\t\t\t\tcommand : \"join\",\n\t\t\t\tstreamId : streamId,\n\t\t\t\tmultiPeer : thiz.isMultiPeer && thiz.multiPeerStreamId == null,\n\t\t\t\tmode : thiz.isPlayMode ? \"play\" : \"both\",\n\t\t};\n\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\n\t}\n\n\tthis.leaveFromRoom = function(roomName) {\n\t\tthiz.roomName = roomName;\n\t\tvar jsCmd = {\n\t\t\t\tcommand : \"leaveFromRoom\",\n\t\t\t\troom: roomName,\n\t\t};\n\t\tconsole.log (\"leave request is sent for \"+ roomName);\n\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\n\t}\n\n\tthis.leave = function (streamId) {\n\n\t\tvar jsCmd = {\n\t\t\t\tcommand : \"leave\",\n\t\t\t\tstreamId: thiz.isMultiPeer && thiz.multiPeerStreamId != null ? thiz.multiPeerStreamId : streamId,\n\t\t};\n\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\n\t\tthiz.closePeerConnection(streamId);\n\t\tthiz.multiPeerStreamId = null;\n\t}\n\n\tthis.getStreamInfo = function(streamId) {\n\t\tvar jsCmd = {\n\t\t\t\tcommand : \"getStreamInfo\",\n\t\t\t\tstreamId: streamId,\n\t\t};\n\t\tthis.webSocketAdaptor.send(JSON.stringify(jsCmd));\n\t}\n\t\n\tthis.enableTrack = function(mainTrackId, trackId, enabled) {\n\t\tvar jsCmd = {\n\t\t\t\tcommand : \"enableTrack\",\n\t\t\t\tstreamId : mainTrackId,\n\t\t\t\ttrackId : trackId,\n\t\t\t\tenabled : enabled,\n\t\t};\n\t\tthis.webSocketAdaptor.send(JSON.stringify(jsCmd));\n\t}\n\t\n\tthis.getTracks = function(streamId, token) {\n\t\tthiz.playStreamId.push(streamId);\n\t\tvar jsCmd =\n\t\t{\n\t\t\t\tcommand : \"getTrackList\",\n\t\t\t\tstreamId : streamId,\n\t\t\t\ttoken : token,\n\t\t}\n\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\n\t}\n\n\tthis.gotStream = function (stream) \n\t{\t\n\t\tthiz.localStream = stream;\n\t\tthiz.localVideo.srcObject = stream;\n\t\tif (thiz.webSocketAdaptor == null || thiz.webSocketAdaptor.isConnected() == false) {\n\t\t\tthiz.webSocketAdaptor = new WebSocketAdaptor();\n\t\t}\n\t};\n\n\tthis.switchVideoCapture = function(streamId) {\n\t\t\n\t\tthiz.publishMode = \"camera\";\n\n\t\tthiz.switchVideoSource(streamId, thiz.mediaConstraints, null, true);\n\t}\n\n\tthis.switchDesktopCapture = function(streamId) {\n\n\t\tthiz.publishMode = \"screen\";\n\n\t\tvar audioConstraint = false;\n\t\tif (typeof this.mediaConstraints.audio != \"undefined\" && this.mediaConstraints.audio != false) {\n\t\t\taudioConstraint = this.mediaConstraints.audio;\n\t\t}\n\n\t\tthiz.getUserMedia(thiz.mediaConstraints, audioConstraint, streamId);\n\t}\n\n\n\tthis.switchDesktopCaptureWithCamera = function(streamId) {\n\n\t\tthiz.publishMode = \"screen+camera\";\n\t\t\n\t\tvar audioConstraint = false;\n\t\tif (typeof this.mediaConstraints.audio != \"undefined\" && this.mediaConstraints.audio != false) {\n\t\t\taudioConstraint = this.mediaConstraints.audio;\n\t\t}\n\t\tthiz.getUserMedia(this.mediaConstraints, audioConstraint);\n\t}\n\n\tthiz.arrangeStreams = function(stream, onEndedCallback, stopDesktop) {\n\t\tconsole.log(\"0\");\n\t\tif (stopDesktop && thiz.desktopStream != null) {\n\t\t\tthiz.desktopStream.getVideoTracks()[0].stop();\n\t\t}\n\t\tconsole.log(\"1\");\n\t\tvar videoTrack = thiz.localStream.getVideoTracks()[0];\n\t\tconsole.log(\"2\");\n\t\tthiz.localStream.removeTrack(videoTrack);\n\t\tconsole.log(\"3\");\n\t\tvideoTrack.stop();\n\t\tconsole.log(\"4\");\n\t\tthiz.localStream.addTrack(stream.getVideoTracks()[0]);\n\t\tconsole.log(\"5\");\n\t\tthiz.localVideo.srcObject = thiz.localStream;\n\t\tconsole.log(\"6\");\n\t\tif (onEndedCallback != null) {\n\t\t\tstream.getVideoTracks()[0].onended = function(event) {\n\t\t\tonEndedCallback(event);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.switchVideoSource = function (streamId, mediaConstraints, onEndedCallback, stopDesktop) {\n\n\t\tnavigator.mediaDevices.getUserMedia(mediaConstraints)\n\t\t.then(function(stream) {\n\n\t\t\tif (thiz.remotePeerConnection[streamId] != null) {\n\t\t\t\tvar videoTrackSender = thiz.remotePeerConnection[streamId].getSenders().find(function(s) {\n\t\t\t\t\treturn s.track.kind == \"video\";\n\t\t\t\t});\n\n\t\t\t\tvideoTrackSender.replaceTrack(stream.getVideoTracks()[0]).then(function(result) {\n\t\t\t\t\tthiz.arrangeStreams(stream, onEndedCallback, stopDesktop);\n\n\t\t\t\t}).catch(function(error) {\n\t\t\t\t\tconsole.log(error.name);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthiz.arrangeStreams(stream, onEndedCallback, stopDesktop);\t\n\t\t\t}\n\n\t\t})\n\t\t.catch(function(error) {\n\t\t\tthiz.callbackError(error.name);\n\t\t});\n\t}\n\n\tthis.switchDesktopSource = function (stream, streamId, mediaConstraints, onEndedCallback, stopDesktop) {\n\t\t// if (thiz.remotePeerConnection[streamId] != null) {\n\t\t// \tvar videoTrackSender = thiz.remotePeerConnection[streamId].getSenders().find(function(s) {\n\t\t// \t\treturn s.track.kind == \"video\";\n\t\t// \t});\n\n\t\t// \tvideoTrackSender.replaceTrack(stream.getVideoTracks()[0]).then(function(result) {\n\t\t// \t\tthiz.arrangeStreams(stream, onEndedCallback, stopDesktop);\n\n\t\t// \t}).catch(function(error) {\n\t\t// \t\tconsole.log(\"Erro 22222222\");\n\t\t// \t\tconsole.log(error.name);\n\t\t// \t});\n\t\t// }\n\t\t// else {\n\t\t\tthiz.arrangeStreams(stream, onEndedCallback, stopDesktop);\n\t\t// }\n\t}\n\n\n\tthis.onTrack = function(event, streamId) {\n\t\tconsole.log(\"onTrack\");\n\t\tif (thiz.remoteVideo != null) {\n\t\t\t//thiz.remoteVideo.srcObject = event.streams[0];\n\t\t\tif (thiz.remoteVideo.srcObject !== event.streams[0]) {\n\t\t\t\tthiz.remoteVideo.srcObject = event.streams[0];\n\t\t\t\tconsole.log('Received remote stream');\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tvar dataObj = {\n\t\t\t\t\tstream: event.streams[0],\n\t\t\t\t\ttrack: event.track,\n\t\t\t\t\tstreamId: streamId\n\t\t\t}\n\t\t\tthiz.callback(\"newStreamAvailable\", dataObj);\n\t\t}\n\n\t}\n\n\tthis.iceCandidateReceived = function(event, streamId) {\n\t\tif (event.candidate) {\n\t\t\t\n\t\t\tif (thiz.candidateTypes.includes(event.candidate.protocol)) {\n\n\t\t\t\tvar jsCmd = {\n\t\t\t\t\t\tcommand : \"takeCandidate\",\n\t\t\t\t\t\tstreamId : streamId,\n\t\t\t\t\t\tlabel : event.candidate.sdpMLineIndex,\n\t\t\t\t\t\tid : event.candidate.sdpMid,\n\t\t\t\t\t\tcandidate : event.candidate.candidate\n\t\t\t\t};\n\t\n\t\t\t\tif (thiz.debug) {\n\t\t\t\t\tconsole.log(\"sending ice candiate for stream Id \" + streamId );\n\t\t\t\t\tconsole.log(JSON.stringify(event.candidate));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (thiz.debug) {\n\t\t\t\t\tconsole.log(\"Candidate's protocol(\"+event.candidate.protocol+\") is not supported. Supported protocols: \" + thiz.candidateTypes);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\n\t\t}\n\t}\n\n\n\tthis.initDataChannel = function(streamId, dataChannel) {\n\t\tdataChannel.onerror = (error) => {\n\t\t\tconsole.log(\"Data Channel Error:\", error);\n\t\t\tvar obj = {\n\t\t\t\tstreamId: streamId,\n\t\t\t\terror: error\n\t\t\t};\n\t\t\tthiz.callbackError(\"data_channel_error\", obj);\n\t\t};\n\n\t\tdataChannel.onmessage = (event) => {\n\t\t\tvar obj = {\n\t\t\t\tstreamId: streamId,\n\t\t\t\tevent: event,\n\t\t\t};\n\t\t\tthiz.callback(\"data_received\", obj);\n\t\t};\n\n\t\tdataChannel.onopen = () => {\n\t\t\tthiz.remotePeerConnection[streamId].dataChannel = dataChannel;\n\t\t\tconsole.log(\"Data channel is opened\");\n\t\t\tthiz.callback(\"data_channel_opened\", streamId)\n\t\t};\n\n\t\tdataChannel.onclose = () => {\n\t\t\tconsole.log(\"Data channel is closed\");\n\t\t\tthiz.callback(\"data_channel_closed\", streamId);\n\t\t};\n\t\t\n\t}\n\n\n\tthis.initPeerConnection = function(streamId) {\n\t\tif (thiz.remotePeerConnection[streamId] == null) \n\t\t{\n\t\t\tvar closedStreamId = streamId;\n\t\t\tconsole.log(\"stream id in init peer connection: \" + streamId + \" close stream id: \" + closedStreamId);\n\t\t\tthiz.remotePeerConnection[streamId] = new RTCPeerConnection(thiz.peerconnection_config);\n\t\t\tthiz.remoteDescriptionSet[streamId] = false;\n\t\t\tthiz.iceCandidateList[streamId] = new Array();\n\t\t\tif (!thiz.playStreamId.includes(streamId)) \n\t\t\t{\n\t\t\t\tif(thiz.localStream != null) {\n\t\t\t\t\tthiz.remotePeerConnection[streamId].addStream(thiz.localStream);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthiz.remotePeerConnection[streamId].onicecandidate = function(event) {\n\t\t\t\tthiz.iceCandidateReceived(event, closedStreamId);\n\t\t\t}\n\t\t\tthiz.remotePeerConnection[streamId].ontrack = function(event) {\n\t\t\t\tthiz.onTrack(event, closedStreamId);\n\t\t\t}\n\t\t\t\n\t\t\tif (thiz.isPlayMode == false) {\n\t\t\t\t//open data channel if it's not play mode,\n\t\t\t\tconst dataChannelOptions = {\n\t\t\t\t\t\tordered: true,\n\t\t\t\t};\n\t\t\t\tvar dataChannel = thiz.remotePeerConnection[streamId].createDataChannel(streamId, dataChannelOptions);\n\t\t\t\tthiz.initDataChannel(streamId, dataChannel);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//in play mode, server opens the datachannel\n\t\t\t\tthiz.remotePeerConnection[streamId].ondatachannel = function(ev) {\n\t\t\t\t\tthiz.initDataChannel(streamId, ev.channel);\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tthiz.remotePeerConnection[streamId].oniceconnectionstatechange = function (event) {\n\t\t\t\tvar obj = {state:thiz.remotePeerConnection[streamId].iceConnectionState, streamId:streamId};\n\t\t\t\tthiz.callback(\"ice_connection_state_changed\",obj);\n\n\t\t\t\tif (!thiz.isPlayMode) {\n\t\t\t\t\tif (thiz.remotePeerConnection[streamId].iceConnectionState == \"connected\") {\n\n\t\t\t\t\t\tthiz.changeBandwidth(thiz.bandwidth, streamId).then(() => {\n\t\t\t\t\t\t\tconsole.log(\"Bandwidth is changed to \" + thiz.bandwidth); \n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(e => console.error(e));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\n\t\t}\n\t}\n\n\tthis.closePeerConnection = function(streamId) {\n\t\tif (thiz.remotePeerConnection[streamId] != null\n\t\t\t\t&& thiz.remotePeerConnection[streamId].signalingState != \"closed\") \n\t\t{\n\t\t\tthiz.remotePeerConnection[streamId].close();\n\t\t\tthiz.remotePeerConnection[streamId] = null;\n\t\t\tdelete thiz.remotePeerConnection[streamId];\n\t\t\tvar playStreamIndex = thiz.playStreamId.indexOf(streamId);\n\t\t\tif (playStreamIndex != -1) \n\t\t\t{\n\t\t\t\tthiz.playStreamId.splice(playStreamIndex, 1);\n\t\t\t}\n\n\t\t}\n\n\t\tif (thiz.remotePeerConnectionStats[streamId] != null) \n\t\t{\t\n\t\t\tclearInterval(thiz.remotePeerConnectionStats[streamId].timerId);\n\t\t\tdelete thiz.remotePeerConnectionStats[streamId];\n\t\t}\n\t}\n\n\tthis.signallingState = function(streamId) {\n\t\tif (thiz.remotePeerConnection[streamId] != null) {\n\t\t\treturn thiz.remotePeerConnection[streamId].signalingState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tthis.iceConnectionState = function(streamId) {\n\t\tif (thiz.remotePeerConnection[streamId] != null) {\n\t\t\treturn thiz.remotePeerConnection[streamId].iceConnectionState;\n\t\t}\n\t\treturn null;\n\t}\n\n\tthis.gotDescription = function(configuration, streamId) \n\t{\n\t\tthiz.remotePeerConnection[streamId]\n\t\t.setLocalDescription(configuration)\n\t\t.then(function(responose)  {\n\t\t\tconsole.debug(\"Set local description successfully for stream Id \" + streamId);\n\n\t\t\tvar jsCmd = {\n\t\t\t\t\tcommand : \"takeConfiguration\",\n\t\t\t\t\tstreamId : streamId,\n\t\t\t\t\ttype : configuration.type,\n\t\t\t\t\tsdp : configuration.sdp\n\n\t\t\t};\n\n\t\t\tif (thiz.debug) {\n\t\t\t\tconsole.debug(\"local sdp: \");\n\t\t\t\tconsole.debug(configuration.sdp);\n\t\t\t}\n\n\t\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\n\n\t\t}).catch(function(error){\n\t\t\tconsole.error(\"Cannot set local description. Error is: \" + error);\n\t\t});\n\t}\n\n\n\tthis.turnOffLocalCamera = function() {\n\t\tif (thiz.remotePeerConnection != null) {\n\n\t\t\tvar track = thiz.localStream.getVideoTracks()[0];\n\t\t\ttrack.enabled = false;\n\t\t}\n\t\telse {\n\t\t\tthis.callbackError(\"NoActiveConnection\");\n\t\t}\n\t}\n\n\tthis.turnOnLocalCamera = function() {\n\t\tif (thiz.remotePeerConnection != null) {\n\t\t\tvar track = thiz.localStream.getVideoTracks()[0];\n\t\t\ttrack.enabled = true;\n\t\t}\n\t\telse {\n\t\t\tthis.callbackError(\"NoActiveConnection\");\n\t\t}\n\t}\n\n\tthis.muteLocalMic = function() {\n\t\tif (thiz.remotePeerConnection != null) {\n\t\t\tvar track = thiz.localStream.getAudioTracks()[0];\n\t\t\ttrack.enabled = false;\n\t\t}\n\t\telse {\n\t\t\tthis.callbackError(\"NoActiveConnection\");\n\t\t}\n\t}\n\n\t/**\n\t * if there is audio it calls callbackError with \"AudioAlreadyActive\" parameter\n\t */\n\tthis.unmuteLocalMic = function() {\n\t\tif (thiz.remotePeerConnection != null) {\n\t\t\tvar track = thiz.localStream.getAudioTracks()[0];\n\t\t\ttrack.enabled = true;\n\t\t}\n\t\telse {\n\t\t\tthis.callbackError(\"NoActiveConnection\");\n\t\t}\n\t}\n\n\tthis.takeConfiguration = function (idOfStream, configuration, typeOfConfiguration) \n\t{\n\t\tvar streamId = idOfStream\n\t\tvar type = typeOfConfiguration;\n\t\tvar conf = configuration;\n\n\t\tthiz.initPeerConnection(streamId);\n\n\t\tthiz.remotePeerConnection[streamId].setRemoteDescription(new RTCSessionDescription({\n\t\t\tsdp : conf,\n\t\t\ttype : type\n\t\t})).then(function(response)  {\n\n\t\t\tif (thiz.debug) {\n\t\t\t\tconsole.debug(\"set remote description is succesfull with response: \" + response + \" for stream : \" \n\t\t\t\t\t\t+ streamId + \" and type: \" + type);\n\t\t\t\tconsole.debug(conf);\n\t\t\t}\n\n\t\t\tthiz.remoteDescriptionSet[streamId] = true;\n\t\t\tvar length = thiz.iceCandidateList[streamId].length;\n\t\t\tconsole.debug(\"Ice candidate list size to be added: \" + length);\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tthiz.addIceCandidate(streamId, thiz.iceCandidateList[streamId][i]);\n\t\t\t}\n\t\t\tthiz.iceCandidateList[streamId] = [];\n\n\t\t\tif (type == \"offer\") {\n\t\t\t\t//SDP constraints may be different in play mode\n\t\t\t\tconsole.log(\"try to create answer for stream id: \" + streamId);\n\n\t\t\t\tthiz.remotePeerConnection[streamId].createAnswer(thiz.sdp_constraints)\n\t\t\t\t.then(function(configuration) \n\t\t\t\t\t\t{\n\t\t\t\t\tconsole.log(\"created answer for stream id: \" + streamId);\n\t\t\t\t\tthiz.gotDescription(configuration, streamId);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(function(error) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.error(\"create answer error :\" + error);\n\t\t\t\t\t\t\t\t});\n\t\t\t}\n\n\t\t}).catch(function(error){\n\t\t\tif (thiz.debug) {\n\t\t\t\tconsole.error(\"set remote description is failed with error: \" + error);\n\t\t\t}\n\t\t\tif(error.toString().indexOf(\"InvalidAccessError\") > -1 || error.toString().indexOf(\"setRemoteDescription\")  > -1){\n\t\t\t\t/**\n\t\t\t\t * This error generally occurs in codec incompatibility.\n\t\t\t\t * AMS for a now supports H.264 codec. This error happens when some browsers try to open it from VP8.\n\t\t\t\t */\n\t\t\t\tthiz.callbackError(\"notSetRemoteDescription\");\n\t\t\t}\n\t\t});\n\n\t}\n\n\n\tthis.takeCandidate = function(idOfTheStream, tmpLabel, tmpCandidate) {\n\t\tvar streamId = idOfTheStream;\n\t\tvar label = tmpLabel;\n\t\tvar candidateSdp = tmpCandidate;\n\n\t\tvar candidate = new RTCIceCandidate({\n\t\t\tsdpMLineIndex : label,\n\t\t\tcandidate : candidateSdp\n\t\t});\n\n\t\tthiz.initPeerConnection(streamId);\n\n\t\tif (thiz.remoteDescriptionSet[streamId] == true) {\n\t\t\tthiz.addIceCandidate(streamId, candidate);\n\t\t}\n\t\telse {\n\t\t\tconsole.debug(\"Ice candidate is added to list because remote description is not set yet\");\n\t\t\tthiz.iceCandidateList[streamId].push(candidate);\n\t\t}\n\t};\n\n\tthis.addIceCandidate = function(streamId, candidate) {\n\t\tif (thiz.candidateTypes.includes(candidate.protocol)) \n\t\t{\n\t\t\n\t\t\tthiz.remotePeerConnection[streamId].addIceCandidate(candidate)\n\t\t\t.then(function(response) {\n\t\t\t\tif (thiz.debug) {\n\t\t\t\t\tconsole.log(\"Candidate is added for stream \" + streamId);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.error(\"ice candiate cannot be added for stream id: \" + streamId + \" error is: \" + error  );\n\t\t\t\tconsole.error(candidate);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tif (thiz.debug) {\n\t\t\t\tconsole.log(\"Candidate's protocol(\"+candidate.protocol+\") is not supported. Supported protocols:\" + thiz.candidateTypes);\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.startPublishing = function(idOfStream) {\n\t\tvar streamId = idOfStream;\n\n\t\tthiz.initPeerConnection(streamId);\n\n\t\tthiz.remotePeerConnection[streamId].createOffer(thiz.sdp_constraints)\n\t\t.then(function(configuration) {\n\t\t\tthiz.gotDescription(configuration, streamId);\n\t\t})\n\t\t.catch(function (error) {\n\t\t\tconsole.error(\"create offer error for stream id: \" + streamId + \" error: \" + error);\n\t\t});\n\t};\n\n\t/**\n\t * If we have multiple video tracks in coming versions, this method may cause some issues\n\t */\n\tthis.getVideoSender = function(streamId) {\n\n\t\tvar videoSender = null;\n\t\t// if ((adapter.browserDetails.browser === 'chrome' ||\n\t\t// \t\t(adapter.browserDetails.browser === 'firefox' &&\n\t\t// \t\t\t\tadapter.browserDetails.version >= 64)) &&\n\t\t// \t\t\t\t'RTCRtpSender' in window &&\n\t\t// \t\t\t\t'setParameters' in window.RTCRtpSender.prototype)  \n\t\t// {\n\t\t\tconst senders = thiz.remotePeerConnection[streamId].getSenders();\n\n\t\t\tfor (let i = 0; i < senders.length; i++) {\n\t\t\t\tif (senders[i].track != null && senders[i].track.kind == \"video\") {\n\t\t\t\t\tvideoSender = senders[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t// }\n\t\treturn videoSender;\n\t}\n\n\t/**\n\t * bandwidth is in kbps\n\t */\n\tthis.changeBandwidth = function(bandwidth, streamId) {\n\n\t\tvar errorDefinition = \"\";\n\n\t\tvar videoSender = thiz.getVideoSender(streamId);\n\n\t\tif (videoSender != null) {\n\t\t\tconst parameters = videoSender.getParameters();\n\n\t\t\tif (!parameters.encodings) {\n\t\t\t\tparameters.encodings = [{}];\n\t\t\t}\n\n\t\t\tif (bandwidth === 'unlimited') {\n\t\t\t\tdelete parameters.encodings[0].maxBitrate;\n\t\t\t} \n\t\t\telse {\n\t\t\t\tparameters.encodings[0].maxBitrate = bandwidth * 1000;\n\t\t\t}\n\n\t\t\treturn videoSender.setParameters(parameters)\n\t\t}\n\t\telse {\n\t\t\terrorDefinition = \"Video sender not found to change bandwidth\";\n\t\t}\n\n\t\treturn Promise.reject(errorDefinition);\n\t};\n\n\tthis.getStats = function(streamId) \n\t{\n\t\tthiz.remotePeerConnection[streamId].getStats(null).then(stats => \n\t\t{\t\n\t\t\tvar bytesReceived = 0;\n\t\t\tvar packetsLost = 0;\n\t\t\tvar fractionLost = 0;\t\t\t\t\t\n\t\t\tvar currentTime = 0;\n\t\t\tvar bytesSent = 0;\t\t\n\n\t\t\tstats.forEach(value => {\n\n\t\t\t\tif (value.type == \"inbound-rtp\") \n\t\t\t\t{\n\t\t\t\t\tbytesReceived += value.bytesReceived;\n\t\t\t\t\tpacketsLost += value.packetsLost;\n\t\t\t\t\tfractionLost += value.fractionLost;\n\t\t\t\t\tcurrentTime = value.timestamp;\n\t\t\t\t}\n\t\t\t\telse if (value.type == \"outbound-rtp\") \n\t\t\t\t{\n\t\t\t\t\tbytesSent += value.bytesSent\n\t\t\t\t\tcurrentTime = value.timestamp\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthiz.remotePeerConnectionStats[streamId].totalBytesReceived = bytesReceived;\n\t\t\tthiz.remotePeerConnectionStats[streamId].packetsLost = packetsLost;\n\t\t\tthiz.remotePeerConnectionStats[streamId].fractionLost = fractionLost;\t\t\t\t\t\n\t\t\tthiz.remotePeerConnectionStats[streamId].currentTime = currentTime;\n\t\t\tthiz.remotePeerConnectionStats[streamId].totalBytesSent = bytesSent;\n\n\t\t\tthiz.callback(\"updated_stats\", thiz.remotePeerConnectionStats[streamId]);\n\n\t\t});\n\t}\n\n\n\tthis.enableStats = function(streamId) {\n\t\tthiz.remotePeerConnectionStats[streamId] = new PeerStats(streamId);\n\t\tthiz.remotePeerConnectionStats[streamId].timerId = setInterval(() => \n\t\t{\n\t\t\tthiz.getStats(streamId);\n\n\t\t}, 5000);\n\t}\n\n\t/**\n\t * After calling this function, create new WebRTCAdaptor instance, don't use the the same objectone\n\t * Because all streams are closed on server side as well when websocket connection is closed.\n\t */\n\tthis.closeWebSocket = function() {\n\t\tfor (var key in thiz.remotePeerConnection) {\n\t\t\tthiz.remotePeerConnection[key].close();\n\t\t}\n\t\t//free the remote peer connection by initializing again\n\t\tthiz.remotePeerConnection = new Array();\n\t\tthiz.webSocketAdaptor.close();\n\t}\n\t\n\tthis.peerMessage = function (streamId, definition, data) {\n\t\tvar jsCmd = {\n\t\t\t\tcommand : \"peerMessageCommand\",\n\t\t\t\tstreamId : streamId,\n\t\t\t\tdefinition : definition,\n\t\t\t\tdata: data,\n\t\t};\n\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\n\t}\n\t\n\tthis.sendData = function(streamId, message) {\n\t\tvar dataChannel = thiz.remotePeerConnection[streamId].dataChannel;\n\t\tdataChannel.send(message);\n\t}\n\t\n\tfunction WebSocketAdaptor() {\n\t\tvar wsConn = new WebSocket(thiz.websocket_url);\n\n\t\tvar connected = false;\n\n\t\tvar pingTimerId = -1;\n\n\t\tvar clearPingTimer = function() {\n\t\t\tif (pingTimerId != -1) {\n\t\t\t\tif (thiz.debug) {\n\t\t\t\t\tconsole.debug(\"Clearing ping message timer\");\n\t\t\t\t}\n\t\t\t\tclearInterval(pingTimerId);\n\t\t\t\tpingTimerId = -1;\n\t\t\t}\n\t\t}\n\n\t\tvar sendPing = function() {\t\t\t\n\t\t\tvar jsCmd = {\n\t\t\t\t\tcommand : \"ping\"\n\t\t\t};\n\t\t\twsConn.send(JSON.stringify(jsCmd));\n\t\t}\n\n\t\tthis.close = function() {\n\t\t\twsConn.close();\n\t\t}\n\n\t\twsConn.onopen = function() {\n\t\t\tif (thiz.debug) {\n\t\t\t\tconsole.log(\"websocket connected\");\n\t\t\t}\n\n\t\t\tpingTimerId = setInterval(() => {\n\t\t\t\tsendPing();\n\t\t\t}, 3000);\n\n\t\t\tconnected = true;\n\t\t\tthiz.callback(\"initialized\");\n\t\t}\n\n\t\tthis.send = function(text) {\n\n\t\t\tif (wsConn.readyState == 0 || wsConn.readyState == 2 || wsConn.readyState == 3) {\n\t\t\t\tthiz.callbackError(\"WebSocketNotConnected\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\twsConn.send(text);\n\t\t\tconsole.log(\"sent message:\" +text);\n\t\t}\n\n\t\tthis.isConnected = function() {\n\t\t\treturn connected;\n\t\t}\n\t\t\n\t\twsConn.onmessage = function(event) {\n\t\t\tvar obj = JSON.parse(event.data);\n\n\t\t\tif (obj.command == \"start\") \n\t\t\t{\n\t\t\t\t//this command is received first, when publishing so playmode is false\n\n\t\t\t\tif (thiz.debug) {\n\t\t\t\t\tconsole.debug(\"received start command\");\n\t\t\t\t}\n\n\t\t\t\tthiz.startPublishing(obj.streamId);\n\t\t\t}\n\t\t\telse if (obj.command == \"takeCandidate\") {\n\n\t\t\t\tif (thiz.debug) {\n\t\t\t\t\tconsole.debug(\"received ice candidate for stream id \" + obj.streamId);\n\t\t\t\t\tconsole.debug(obj.candidate);\n\t\t\t\t}\n\n\t\t\t\tthiz.takeCandidate(obj.streamId, obj.label, obj.candidate);\n\n\t\t\t} else if (obj.command == \"takeConfiguration\") {\n\n\t\t\t\tif (thiz.debug) {\n\t\t\t\t\tconsole.log(\"received remote description type for stream id: \" + obj.streamId + \" type: \" + obj.type );\n\t\t\t\t}\n\t\t\t\tthiz.takeConfiguration(obj.streamId, obj.sdp, obj.type);\n\n\t\t\t}\n\t\t\telse if (obj.command == \"stop\") {\n\t\t\t\tconsole.debug(\"Stop command received\");\n\t\t\t\tthiz.closePeerConnection(obj.streamId);\n\t\t\t}\n\t\t\telse if (obj.command == \"error\") {\n\t\t\t\tthiz.callbackError(obj.definition);\n\t\t\t}\n\t\t\telse if (obj.command == \"notification\") {\n\t\t\t\tthiz.callback(obj.definition, obj);\n\t\t\t\tif (obj.definition == \"play_finished\" || obj.definition == \"publish_finished\") {\n\t\t\t\t\tthiz.closePeerConnection(obj.streamId);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (obj.command == \"streamInformation\") {\n\t\t\t\tthiz.callback(obj.command, obj);\n\t\t\t}\n\t\t\telse if (obj.command == \"pong\") {\n\t\t\t\tthiz.callback(obj.command);\n\t\t\t}\n\t\t\telse if (obj.command == \"trackList\") {\n\t\t\t\tthiz.callback(obj.command, obj);\n\t\t\t}\n\t\t\telse if (obj.command == \"connectWithNewId\") {\n\t\t\t\tthiz.multiPeerStreamId = obj.streamId;\n\t\t\t\tthiz.join(obj.streamId);\n\t\t\t}\n\t\t\telse if (obj.command == \"peerMessageCommand\") {\n\t\t\t\tthiz.callback(obj.command, obj);\n\t\t\t}\n\t\t}\n\n\t\twsConn.onerror = function(error) {\n\t\t\tconsole.log(\" error occured: \" + JSON.stringify(error));\n\t\t\tclearPingTimer();\n\t\t\tthiz.callbackError(error)\n\t\t}\n\n\t\twsConn.onclose = function(event) {\n\t\t\tconnected = false;\n\t\t\tconsole.log(\"connection closed.\");\n\t\t\tclearPingTimer();\n\t\t\tthiz.callback(\"closed\", event);\n\t\t}\n\t}\n}\n","import {\n  ADD_MESSAGE,\n  USER_LEFT,\n  GET_MESSAGES,\n  USER_JOINED,\n  START_LECTURE,\n  STOP_LECTURE,\n  LOAD_LECTURE,\n  GET_PUBLISH_TOKEN,\n  GET_PLAY_TOKEN,\n  ALLOW_USER_STREAM,\n  RECEIVE_SLIDE,\n  CHANGE_SLIDE_PAGE,\n  CHANGE_CURRENT_REPLAY\n} from './types';\nimport io from 'socket.io-client';\nimport config from '../Config';\nimport axios from 'axios';\nimport { stopPublishing } from './stream';\n\nlet socket;\n\nexport const initSocket = (token, classroomId) => (dispatch, getState) => {\n  socket = io(`${config.URL.Server}?token=${token}&classroom=${classroomId}`);\n\n  socket.on('connect', () => {\n    socket.emit('loadLecture', null, (hasStarted, slideUrl, onlineUsers) => {\n      onlineUsers = assignColors(onlineUsers);\n\n      dispatch({\n        type: LOAD_LECTURE,\n        payload: {\n          hasStarted,\n          onlineUsers,\n          slideUrl\n        }\n      });\n    });\n  });\n\n  socket.on('message', msg => {\n    dispatch({\n      type: ADD_MESSAGE,\n      payload: msg\n    });\n  });\n\n  socket.on('slidesUploaded', url => {\n    dispatch({\n      type: RECEIVE_SLIDE,\n      payload: url\n    });\n  });\n\n  socket.on('slidesPageChanged', pageNumber => {\n    dispatch({\n      type: CHANGE_SLIDE_PAGE,\n      payload: pageNumber\n    });\n  });\n\n  socket.on('startLecture', async () => {\n    dispatch({\n      type: START_LECTURE\n    });\n\n    // Get a token from the media server to authorize for playing the stream.\n    const playToken = await axios.get(`${config.URL.Server}/api/streams/playToken?classroomId=${classroomId}`);\n    console.log(playToken);\n    dispatch({\n      type: GET_PLAY_TOKEN,\n      payload: playToken\n    });\n  });\n\n  socket.on('stopLecture', () => {\n    socket.emit('leave');\n\n    dispatch({\n      type: STOP_LECTURE\n    });\n  });\n\n  socket.on('userJoined', user => {\n    user = assignColor(user, getState().lecture.onlineUsers);\n    dispatch({\n      type: USER_JOINED,\n      payload: user\n    })\n  });\n\n  socket.on('userLeft', user => {\n    dispatch({\n      type: USER_LEFT,\n      payload: user\n    })\n  });\n\n  socket.on('sendPublishToken', ({token}) => {\n    dispatch({\n      type: GET_PUBLISH_TOKEN,\n      payload: {\n        publishToken: token,\n        currentStreamerId: getState().auth.user._id\n      }\n    });\n  });\n\n  socket.on('streamerChanged', ({newStreamer}) => {\n    dispatch({\n      type: ALLOW_USER_STREAM,\n      payload: {\n        currentStreamerId: newStreamer\n      }\n    });\n\n    if (getState().stream.isSharing && getState().auth.user._id !== newStreamer) {\n      dispatch(stopPublishing(classroomId));\n    }\n  });\n}\n\n// Does not work for more than two duplicate names.\nconst assignColors = (users) => {\n  const deletedIndexes = [];\n\n  for (const [i, user] of users.entries()) {\n    if (deletedIndexes.includes(i))\n      continue;\n\n    if (users.some(other => user.name === other.name)) {\n      let colorsCopy = [...colors]\n      for (let other of users) {\n        if (user.name === other.name) {\n          other.color = colorsCopy.pop();\n          deletedIndexes.push(users.indexOf(other));\n        }\n      }\n      user.color = colorsCopy.pop();\n    } else {\n      user.color = colors[Math.floor(Math.random() * colors.length)];\n    }\n  }\n\n  return users;\n}\n\nconst assignColor = (user, users) => {\n  let sameName = users.find(other => user.name === other.name);\n\n  if (sameName !== undefined) {\n    do {\n      user.color = colors[Math.floor(Math.random() * colors.length)];\n      console.log(user.color, sameName.color);\n    } while (user.color === sameName.color);\n  } else {\n    user.color = colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  return user;\n}\n\nconst colors = ['#000', '#ccc', '#aaa', '#0ec']\n\n// TODO: add error handling for axios requests.\nexport const loadMessages = (classroomId) => async dispatch => {\n  const M = await axios.get(`${config.URL.Server}/api/classrooms/${classroomId}/getlivechat`);\n\n  dispatch({\n    type: GET_MESSAGES,\n    payload: M\n  });\n}\n\nexport const joinClassroom = () => async (dispatch, getState) => {\n  socket.emit('join');\n}\n\nexport const sendMessage = (m) => dispatch => {\n  socket.emit('sendMessage', m);\n}\n\nexport const startLecture = (id) => async (dispatch, getState) => {\n  try {\n    await axios.post(`${config.URL.Server}/api/classrooms/${id}/start`);\n    socket.emit('startLecture');\n\n    // Get a token from the media server to authorize for publishing a stream.\n    const publishToken = await axios.get(`${config.URL.Server}/api/streams/publishToken?classroomId=${id}`);\n    \n    dispatch({\n      type: GET_PUBLISH_TOKEN,\n      payload: {\n        publishToken,\n        currentStreamerId: getState().auth.user._id\n      }\n    });\n  } catch (error) {\n    console.error('Error starting the lecture', error);\n  }\n}\n\nexport const stopLecture = (id) => async dispatch => {\n  await axios.post(`${config.URL.Server}/api/classrooms/${id}/stop`);\n  socket.emit('stopLecture');\n}\n\n// Allow a student to share video/audio stream.\nexport const allowStudent = (userId) => async dispatch => {\n  try {\n    // Get a token from the media server and send it to the student.\n    const publishToken = await axios.get(`${config.URL.Server}/api/streams/publishToken?classroomId=${userId}`);\n    socket.emit('allowStudent', {to: userId, token: publishToken});\n  } catch(e) {\n    console.log(e);\n  }\n}\n\n// Disallow the student to share a stream & change the streamer back to the tutor.\nexport const disallowStudent = (userId) => async dispatch => {\n  socket.emit('disallowStudent', {to: userId});\n}\n\nexport const uploadSlides = (url) => async dispatch => {\n  socket.emit('uploadSlides', url);\n}\n\nexport const changeSlidesPage = pageNumber => async (dispatch, getState) => {\n  dispatch({\n    type: CHANGE_SLIDE_PAGE,\n    payload: pageNumber\n  });\n\n  if (getState().auth.user.kind === \"Tutor\")\n    socket.emit('changeSlidesPage', pageNumber);\n}\n\n\nexport const replayLecture = (classroomId, lectureId) => async (dispatch, getState) => {\n    dispatch({type: STOP_LECTURE});\n\n    try {\n        const lecture = await axios.get(`${config.URL.Server}/api/lectures/${classroomId}/${lectureId}`);\n        let { chatMessages, slideHistory, streamHistory } = lecture.data;\n\n        // Time and duration in milliseconds.\n        let duration = lecture.endedOn - lecture.startedOn;\n        let time = 0;\n        // Time in minutes.\n        let min = 0;\n\n        let timerId = setInterval(() => {\n            if (time >= duration)\n                clearInterval(timerId);\n\n            // Get messages sent in this second of the lecture.\n            for (let i = 0; i < chatMessages.length; i++) {\n                let messageTime = chatMessages[i].time - lecture.startedOn;\n                if (messageTime >= time && messageTime <= (time + 1000)) {\n                    dispatch({\n                        type: ADD_MESSAGE,\n                        payload: chatMessages[i]\n                    });\n\n                    chatMessages.splice(i, 1);\n                    i--;\n                } else {\n                    break;\n                }\n            }\n\n            // Get slides file and page changes in this second of the lecture.\n            for (let i = 0; i < slideHistory.length; i++) {\n                let messageTime = slideHistory[i].date - lecture.startedOn;\n                if (messageTime >= time && messageTime <= (time + 1000)) {\n                    if(slideHistory[i].slideUrl !== getState().lecture.slideUrl) {\n                        dispatch({\n                            type: RECEIVE_SLIDE,\n                            payload: slideHistory[i].slideUrl\n                        });\n                    }\n\n                    dispatch({\n                        type: CHANGE_SLIDE_PAGE,\n                        payload: slideHistory[i].slideNumber\n                    });                    \n\n                    slideHistory.splice(i, 1);\n                    i--;\n                } else {\n                    break;\n                }\n            }\n\n            time += 1000;\n        }, 1000);\n\n        // Check if the video replay url changed every minute.\n        let minTimerId = setInterval(() => {\n            if (min >= (duration / 60000))\n                clearInterval(minTimerId);\n\n            if (streamHistory[min.toString()]) {\n                dispatch({\n                    type: CHANGE_CURRENT_REPLAY,\n                    payload: streamHistory[min.toString()]\n                });\n            }\n                \n            min++;\n        }, 60000);\n    } catch(e) {\n        console.log(e);\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {Button, Input, Spin, Upload, message} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport ChatMessage from './ChatMessage';\nimport {connect} from 'react-redux';\nimport {sendMessage, loadMessages} from '../../../actions/lecture';\nimport PropTypes from 'prop-types';\nimport {UploadOutlined, SendOutlined} from '@ant-design/icons';\nimport config from '../../../Config';\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nconst ChatContainer = ({\n    messages,\n    sendMessage,\n    loadMessages,\n    onlineUsers,\n    loading,\n    token\n}) => {\n    const { id } = useParams();\n    const [msg, setMsg] = useState('');\n\n    const onClick = () => {\n        sendMessage(msg);\n    }\n\n    useEffect(() => {\n        loadMessages(id);\n    }, []);\n\n    const props = {\n        name: 'file',\n        action: `${config.URL.Server}/api/files/upload/${id}`,\n        headers: {\n            \"x-auth-token\": token\n        },\n        onChange(info) {\n            if (info.file.status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            if (info.file.status === 'done') {\n                // After the file is successfully uploaded to the server, send a message to the\n                // chat to the other users.\n                let type;\n                if (info.file.response.mimetype.startsWith('image')) {\n                    type = 'image';\n                } else {\n                    type = 'file';\n                }\n\n                let lectureId = /([^\\/]+$)/.exec(info.file.response.destination)[0];\n                let text = `files/${id}/${lectureId}/${info.file.response.filename}`;\n                sendMessage({ text, type });\n                message.success(`${info.file.name} file uploaded successfully`);\n            } else if (info.file.status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n            }\n        }\n    };\n\n    const btns = (\n        <>\n            <Button type=\"submit\" onClick={onClick} icon={<SendOutlined />}>Send</Button>\n            <Upload {...props}>\n                <Button>\n                    <UploadOutlined />\n                </Button>\n            </Upload>\n        </>\n    );\n\n\n    // TODO: submit on clicking enter.\n\n    return (\n        <div className=\"chat-container\">\n            <ScrollToBottom className=\"chat-messages\">\n                {!loading ? messages.map((m, i) => {\n                    let user = onlineUsers.find(u => m.sender === u._id);\n                    if (user === undefined) return;\n                    return <ChatMessage key={i} message={m.text} senderFirstName={user.name} color={user.color} type={m.type} />\n                }) : <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} size=\"large\" spinning={loading}></Spin>\n                }\n            </ScrollToBottom>\n            <Input onChange={e => setMsg({ text: e.target.value, type: 'text' })} addonAfter={btns} />\n        </div>\n    )\n}\n\nChatContainer.propTypes = {\n    messages: PropTypes.array,\n    sendMessage: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    messages: state.lecture.messages,\n    onlineUsers: state.lecture.onlineUsers,\n    loading: state.lecture.loading,\n    token: state.auth.token\n});\n\nexport default connect(mapStateToProps, {\n    sendMessage,\n    loadMessages\n})(ChatContainer);\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { initWebrtc, startPublishingAction, stopPublishing, toggleMic, switchMode } from '../../actions/stream';\r\nimport { disallowStudent } from '../../actions/lecture';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Radio, Tooltip, Space } from 'antd';\r\nimport { PauseCircleOutlined, PlayCircleOutlined, VideoCameraOutlined, DesktopOutlined, AudioOutlined, AudioFilled, AudioMutedOutlined, SwapOutlined } from '@ant-design/icons';\r\n\r\nconst Stream = ({ streamState, publishToken, initWebrtc, startPublishingAction, stopPublishing, toggleMic, switchMode, currentStreamerId, user, disallowStudent }) => {\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        initWebrtc(id);\r\n    }, []);\r\n\r\n    const startSharing = () => {\r\n        startPublishingAction(publishToken, id);\r\n    }\r\n\r\n    const stopSharing = () => {\r\n        stopPublishing(id);\r\n    }\r\n\r\n    const switchStreamMode = e => {\r\n        switchMode(id, e.target.value);\r\n    }\r\n\r\n    if (currentStreamerId === user._id) {\r\n        return (\r\n            <>\r\n                <Radio.Group defaultValue=\"webcam\" onChange={switchStreamMode}>\r\n                    <Radio.Button value=\"webcam\"><VideoCameraOutlined /> Webcam</Radio.Button>\r\n                    <Radio.Button value=\"screen\"><DesktopOutlined /> Screen</Radio.Button>\r\n                    <Radio.Button value=\"audio\"><AudioOutlined /> Audio Only</Radio.Button>\r\n                </Radio.Group>\r\n                <Space>\r\n                    {!streamState.isSharing ? (<Button onClick={startSharing} disabled={!streamState.webrtcConnected} icon={<PlayCircleOutlined />} type=\"primary\">Start Sharing</Button>) : (<Button onClick={stopSharing} icon={<PauseCircleOutlined />} type=\"danger\">Stop Sharing</Button>)}\r\n                    <Tooltip title={streamState.micMuted ? 'Unmute mic' : 'Mute mic'}>\r\n                        <Button onClick={toggleMic} shape=\"circle\" icon={streamState.micMuted ? (<AudioMutedOutlined />) : (<AudioFilled />)} />\r\n                    </Tooltip>\r\n                </Space>\r\n            </>\r\n        );\r\n    } else if (user.kind === \"Tutor\") {\r\n        return (\r\n            <Tooltip title=\"Stop student from streaming to share your own stream\">\r\n                <Button onClick={disallowStudent} danger icon={<SwapOutlined />}>Share your stream and stop student</Button>\r\n            </Tooltip>\r\n        );\r\n    } else {return null;}\r\n}\r\n\r\nStream.propTypes = {\r\n    streamState: PropTypes.object.isRequired,\r\n    initWebrtc: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    streamState: state.stream,\r\n    publishToken: state.lecture.publishToken,\r\n    currentStreamerId: state.lecture.currentStreamerId,\r\n    user: state.auth.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { initWebrtc, startPublishingAction, stopPublishing, toggleMic, switchMode, disallowStudent })(Stream);","import React from 'react';\nimport Clappr from 'clappr';\nimport { connect } from 'react-redux';\n\nclass VideoPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    let changed = (nextProps.source != this.props.source);\n    this.props = nextProps;\n    this.state = nextState;\n    if (changed) {\n      this.change(nextProps.source);\n    }\n    return false;\n  }\n\n  componentDidMount() {\n    this.change(this.props.source);\n  }\n\n  componentWillUnmount() {\n    this.destroyPlayer();\n  }\n\n  destroyPlayer() {\n    if (this.player) {\n      this.player.destroy();\n    }\n    this.player = null;\n  }\n\n  change(source) {\n    if (this.player) {\n      this.destroyPlayer();\n    }\n    console.log(source);\n    this.player = new Clappr.Player({\n      parent: this.refs.player,\n      source: source,\n      width: '100%',\n      height: '100%',\n      hlsjsConfig: {\n        enableWorker: true\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"clappr-vid\" ref=\"player\"></div>\n    );\n  }\n};\n\nexport default VideoPlayer;\n// export default connect()(VideoPlayer);","import React, { useState, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Button, Upload, message } from 'antd';\r\nimport { LeftCircleOutlined, RightCircleOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport { usePdf } from '@mikecousins/react-pdf';\r\nimport { uploadSlides, changeSlidesPage } from '../../actions/lecture';\r\nimport config from '../../Config';\r\n\r\nconst Slides = ({user, slideUrl, uploadSlides, token, changeSlidesPage, page}) => {\r\n    // TODO: Get the page when the lecture loads.\r\n    // const [page, setPage] = useState(1);\r\n    const canvasRef = useRef(null);\r\n    const { id } = useParams();\r\n  \r\n    const { pdfDocument, pdfPage } = usePdf({\r\n      file: `${config.URL.Server}/${slideUrl}`,\r\n      page,\r\n      canvasRef\r\n    });\r\n\r\n    const props = {\r\n        name: 'file',\r\n        action: `${config.URL.Server}/api/files/upload/${id}`,\r\n        headers: {\r\n            \"x-auth-token\": token\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== 'uploading') {\r\n                console.log(info.file, info.fileList);\r\n            }\r\n            if (info.file.status === 'done') {\r\n                // Send the slides file name to the student when the upload is done.\r\n                let lectureId = /([^\\/]+$)/.exec(info.file.response.destination)[0];\r\n                let url = `files/${id}/${lectureId}/${info.file.response.filename}`;\r\n                uploadSlides(url);\r\n                message.success(`${info.file.name} file has been uploaded successfully.`);\r\n            } else if (info.file.status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        }\r\n    };\r\n\r\n    const next = () => {\r\n        changeSlidesPage(page + 1);\r\n    }\r\n    const prev = () => {\r\n        changeSlidesPage(page - 1);\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        {(!pdfDocument && user.kind === \"Tutor\") && (\r\n            <Upload.Dragger {...props}>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                    <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Click or drag the slides to this area to upload</p>\r\n                <p className=\"ant-upload-hint\">\r\n                    Please, upload a pptx, ppt or PDF file.\r\n                </p>\r\n            </Upload.Dragger>\r\n          )}\r\n        <canvas className=\"slides-canvas\" ref={canvasRef} />\r\n        {Boolean(pdfDocument && pdfDocument.numPages) && (\r\n            <nav>\r\n                <ul className=\"pager\">\r\n                    <li className=\"previous\">\r\n                        <Button shape=\"circle\" disabled={page === 1} onClick={prev} icon={<LeftCircleOutlined />} />\r\n                    </li>\r\n                    {`${page}/${pdfDocument.numPages}`}\r\n                    <li className=\"next\">\r\n                        <Button\r\n                            shape=\"circle\"\r\n                            disabled={page === pdfDocument.numPages}\r\n                            onClick={next}\r\n                            icon={<RightCircleOutlined />} />\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        )}\r\n    </div>\r\n    )\r\n}\r\n\r\nSlides.propTypes = {\r\n    user: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.user,\r\n    slideUrl: state.lecture.slideUrl,\r\n    page: state.lecture.slidePage,\r\n    token: state.auth.token\r\n});\r\n\r\nexport default connect(mapStateToProps, { uploadSlides, changeSlidesPage })(Slides);","import React, { useEffect } from 'react';\nimport { Layout, Row, Col } from 'antd';\nimport {useParams} from 'react-router-dom';\nimport ChatContainer from './chat/ChatContainer';\nimport {connect} from 'react-redux';\nimport {initSocket, joinClassroom} from '../../actions/lecture';\nimport PropTypes from 'prop-types';\nimport { Result, Button, List, Avatar, Menu, Dropdown } from 'antd';\nimport { HistoryOutlined, MessageOutlined, MoreOutlined } from '@ant-design/icons';\nimport Stream from './Stream';\nimport VideoPlayer from \"./VideoPlayer\";\nimport axios from 'axios';\nimport config from '../../Config';\nimport Slides from \"./Slides\";\n\nconst Classroom = ({initSocket, joinClassroom, token, lectureStarted, streamState, playToken, publishToken, onlineUsers, currentStreamerId}) => {\n    let mediaServerApp = \"LiveApp\";\n    const {id} = useParams();    \n\n    useEffect(() => {\n        initSocket(token, id);\n    }, [token, id]);\n\n    useEffect(() => {\n        if(lectureStarted) {\n            joinClassroom();\n        }\n\n        // return leave()... socket.io leaves automatically\n    }, [lectureStarted, id]);\n\n    useEffect(() => {\n        async function getClassroom() {\n            try {\n                const { data } = await axios.get(`${config.URL.Server}/api/classrooms/${id}`, {headers: {\"x-auth-token\": token}});\n                console.log(data);\n\n                mediaServerApp = data.mediaServerApp;\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        getClassroom();\n    }, []);\n\n    const optionsMenu = (\n        <Menu>\n          <Menu.Item key=\"0\">\n            <MessageOutlined />\n            Private message\n          </Menu.Item>\n        </Menu>\n      );\n\n    return (\n        <Layout.Content>\n            {lectureStarted ? (\n                 <>\n                <Row justify=\"space-around\" className=\"classroom\">\n                     <Col span={6}>\n                        <ChatContainer />\n                        <video id=\"localVideo\" className={streamState.isSharing ? \"clappr-vid\" : \"hide\"} autoPlay muted></video>\n                        {!streamState.isSharing && mediaServerApp ? (<VideoPlayer className=\"play-vid\" source={`https://${window.location.hostname}:5443/${mediaServerApp}/streams/${id}.m3u8`} />) : \"\"}\n                     </Col>\n                     <Col span={11}>\n                            <Slides />\n                        </Col>\n                     <Col span={5}>\n                        <List\n                            bordered\n                            // header={publishToken ? <Stream /> : \"\"}\n                            header={<Stream />}\n                            dataSource={onlineUsers}\n                            renderItem={item => (\n                                <List.Item key={item._id} actions={[<Dropdown overlay={optionsMenu} trigger={['click']}>\n                                    <a onClick={e => e.preventDefault()}><MoreOutlined /></a>\n                                    </Dropdown>]}\n                                >\n                                <List.Item.Meta\n                                    avatar={\n                                        <Avatar className={currentStreamerId === item._id ? \"currentStreamer\" : \"\"} style={{ backgroundColor: item.color, verticalAlign: 'middle' }} size=\"large\">\n                                            {item.name}\n                                        </Avatar>\n                                    }\n                                    title={item.name}\n                                    description={item.kind}\n                                />\n                                </List.Item>\n                            )}\n                        />\n                     </Col>\n                 </Row>\n                 </>\n                 ) : (\n                <Result\n                icon={<HistoryOutlined />}\n                title=\"The lecture has not started yet.\"\n                extra={<Button type=\"primary\">Do Something</Button>}\n                />\n            )}\n        </Layout.Content>\n    )\n}\n\nClassroom.propTypes={\n    token: PropTypes.string.isRequired,\n    lectureStarted: PropTypes.bool.isRequired,\n    joinClassroom: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    token: state.auth.token,\n    lectureStarted: state.lecture.lectureStarted,\n    onlineUsers: state.lecture.onlineUsers,\n    streamState: state.stream,\n    playToken: state.lecture.playToken,\n    currentStreamerId: state.lecture.currentStreamerId,\n    publishToken: state.lecture.publishToken\n});\n\nexport default connect(mapStateToProps, {initSocket, joinClassroom})(Classroom);\n","import React, { useEffect } from 'react';\r\nimport { Layout, Row, Col } from 'antd';\r\nimport { useParams } from 'react-router-dom';\r\nimport ChatContainer from './chat/ChatContainer';\r\nimport { connect } from 'react-redux';\r\nimport { initSocket, joinClassroom, startLecture, stopLecture, allowStudent } from '../../actions/lecture';\r\nimport PropTypes from 'prop-types';\r\nimport { Result, Button, List, Avatar, Menu, Dropdown } from 'antd';\r\nimport { HistoryOutlined, MoreOutlined, StopOutlined, VideoCameraAddOutlined, MessageOutlined } from '@ant-design/icons';\r\nimport Stream from './Stream';\r\nimport VideoPlayer from \"./VideoPlayer\";\r\nimport axios from 'axios';\r\nimport config from '../../Config';\r\nimport Slides from \"./Slides\";\r\n\r\nconst TutorClassroom = ({\r\n    initSocket,\r\n    joinClassroom,\r\n    token,\r\n    lectureStarted,\r\n    startLecture,\r\n    stopLecture,\r\n    onlineUsers,\r\n    streamState,\r\n    playToken,\r\n    currentStreamerId\r\n}) => {\r\n    let mediaServerApp = \"LiveApp\";\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        initSocket(token, id);\r\n\r\n    }, [token, id]);\r\n\r\n    useEffect(() => {\r\n        if (lectureStarted) {\r\n            joinClassroom();\r\n        }\r\n\r\n        // return leave()... socket.io leaves automatically\r\n    }, [lectureStarted, id]);\r\n\r\n    useEffect(() => {\r\n        async function getClassroom() {\r\n            try {\r\n                // TODO: move mediaServerApp to lecture redux state.\r\n                const { data } = await axios.get(`${config.URL.Server}/api/classrooms/${id}`, {headers: {\"x-auth-token\": token}});\r\n                console.log(data);\r\n                mediaServerApp = data.mediaServerApp;\r\n            } catch (e) {\r\n                console.log(e);\r\n            }    \r\n        }\r\n        getClassroom();\r\n    }, []);\r\n\r\n    const StartLecture = () => {\r\n        startLecture(id);\r\n    }\r\n\r\n    const StopLecture = () => {\r\n        stopLecture(id);\r\n    }\r\n\r\n    const generateOptions = (userId) => (\r\n        <Menu>\r\n          <Menu.Item key=\"0\" onClick={allowStudent(userId)}>\r\n            <VideoCameraAddOutlined />\r\n            Allow to speak\r\n          </Menu.Item>\r\n          <Menu.Item key=\"1\">\r\n            <MessageOutlined />\r\n            Private message\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <StopOutlined />\r\n            Ban from chat\r\n          </Menu.Item>\r\n        </Menu>\r\n      );\r\n\r\n    return (\r\n        <Layout.Content>\r\n            {lectureStarted ? (\r\n                <>\r\n                    <Row justify=\"space-around\" className=\"classroom\">\r\n                        <Col span={6}>\r\n                            <ChatContainer />\r\n                            <video id=\"localVideo\" className={streamState.isSharing ? \"clappr-vid\" : \"hide\"} autoPlay muted playsInline></video>\r\n                            {!streamState.isSharing && mediaServerApp ? (<VideoPlayer className=\"play-vid\" source={`https://${window.location.hostname}:5443/${mediaServerApp}/streams/${id}.m3u8`} />) : \"\"}\r\n                        </Col>\r\n                        <Col span={11}>\r\n                            <Slides />\r\n                        </Col>\r\n                        <Col span={5}>\r\n                            <Button type=\"danger\" onClick={StopLecture}>Stop Lecture</Button>\r\n                            <List\r\n                                bordered\r\n                                header={<Stream />}\r\n                                dataSource={onlineUsers}\r\n                                renderItem={item => (\r\n                                    <List.Item key={item._id} actions={[<Dropdown overlay={generateOptions(item._id)} trigger={['click']}>\r\n                                        <a onClick={e => e.preventDefault()}><MoreOutlined /></a>\r\n                                        </Dropdown>]}\r\n                                    >\r\n                                        <List.Item.Meta\r\n                                            avatar={\r\n                                                <Avatar className={currentStreamerId === item._id ? \"currentStreamer\" : \"\"} style={{ backgroundColor: item.color, verticalAlign: 'middle' }} size=\"large\">\r\n                                                    {item.name}\r\n                                                </Avatar>\r\n                                            }\r\n                                            title={item.name}\r\n                                            description={item.kind}\r\n                                        />\r\n                                    </List.Item>\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            ) : (\r\n                    <Result\r\n                        icon={<HistoryOutlined />}\r\n                        title=\"The lecture has not started yet.\"\r\n                        extra={<Button type=\"primary\" onClick={StartLecture}>Start a Lecture</Button>}\r\n                    />\r\n                )}\r\n        </Layout.Content>)\r\n}\r\n\r\nTutorClassroom.propTypes = {\r\n    token: PropTypes.string.isRequired,\r\n    lectureStarted: PropTypes.bool.isRequired,\r\n    joinClassroom: PropTypes.func.isRequired,\r\n    startLecture: PropTypes.func.isRequired,\r\n    stopLecture: PropTypes.func.isRequired,\r\n    onlineUsers: PropTypes.array.isRequired,\r\n    streamState: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token,\r\n    lectureStarted: state.lecture.lectureStarted,\r\n    onlineUsers: state.lecture.onlineUsers,\r\n    streamState: state.stream,\r\n    playToken: state.lecture.playToken,\r\n    currentStreamerId: state.lecture.currentStreamerId,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    initSocket,\r\n    joinClassroom,\r\n    startLecture,\r\n    stopLecture,\r\n    allowStudent\r\n})(TutorClassroom);","import React, { Fragment } from 'react';\nimport { Form, Icon as LegacyIcon } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport { Input, Button } from 'antd';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginAsGuest } from '../../actions/auth';\n\nconst LoginAsGuest = ({form, loginAsGuest, isAuthenticated, user}) => {\n    const handleSubmit = async e => {\n        e.preventDefault();\n        form.validateFields((err, values) => {\n            if (!err) {\n                loginAsGuest(values.username);\n            }\n        });\n    };\n\n    if (isAuthenticated && user) {\n        return <Redirect to='/dashboard' />;\n    }\n\n    const { getFieldDecorator } = form;\n    return (\n        <Fragment>\n        <h2>Login as a guest</h2>\n        <Form onSubmit={handleSubmit} className=\"login-form\">\n            <Form.Item>\n                {getFieldDecorator('username', {\n                    rules: [{ required: true, message: 'Please input your username!' }],\n                })(\n                <Input\n                prefix={<LegacyIcon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                placeholder=\"Username\"\n                />,\n                )}\n            </Form.Item>\n\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Log in\n            </Button>\n        </Form>\n        </Fragment>\n    );\n}\n\n\nLoginAsGuest.propTypes = {\n    loginAsGuest: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\n\nconst Wrapped = Form.create({ name: 'login-as-guest' })(LoginAsGuest);\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {loginAsGuest})(Wrapped);","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst Home = ({ isAuthenticated, user }) => {\n    const view = isAuthenticated ?\n        <Fragment>\n            <h3>welcome {user.name} in Swift Course Home Page as a {user.kind}</h3>\n            <Link to='/dashboard'>Go to dashboard</Link>\n        </Fragment> :\n        <Fragment>\n            <h3>welcome in Swift Course Home Page</h3>\n            <p style={{ color: '#000000' }}>\n                SiwftCourse, a web application that uses the BitTorrent protocol and other features that make\n                it cost less bandwidth.\n                The system will take advantage of the students’ upload bandwidth to support the stream.\n                To solve the timing of classes problem, the lecture will be recorded so students can still\n                watch it after it ends for a period of 24 hours. Furthermore,\n                there will be no need for a mobile app because the website will be responsive\n                (supports all screen sizes).\n            </p>\n            <div>\n                <Link to=\"/register/student\" >join us</Link>&nbsp;&nbsp;&nbsp;&nbsp;\n                <Link to=\"/register/tutor\">be a tutor in our site</Link>&nbsp;&nbsp;&nbsp;&nbsp;\n                <Link to=\"/login\">Already have an account</Link>\n            </div>\n        </Fragment>;\n    return (\n        <Fragment>\n            <h1>Swift Course</h1>\n            <h2>A Fast and Affordable Online Classroom System</h2>\n            {view}\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n})\nexport default connect(mapStateToProps)(Home);","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteAdmin, editAdmin } from '../../actions/adimnActions';\nimport { Form, Input, Button, Spin, Popconfirm } from 'antd';\nimport { LoadingOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { Icon } from '@ant-design/compatible';\nimport { useHistory, useParams } from 'react-router-dom';\n\n\nconst AdminProfile = ({ deleteAdmin, editAdmin, user, loading }) => {\n    const history = useHistory();\n    const [form] = Form.useForm();\n    let { id } = useParams();\n    let administrator;\n\n    useEffect(() => {\n        administrator = user\n\n        if (administrator) {\n            form.setFieldsValue({\n                email: administrator.email,\n                name: administrator.name\n            });\n        }\n    });\n\n    const onFinish = values => {\n        const { email, name } = values;\n        administrator = {\n            ...administrator,\n            email,\n            name\n        }\n        editAdmin(administrator, history, '/dashboard');\n    }\n\n    const onConfirm = () => {\n        deleteAdmin(id, history, '/');\n    }\n\n    return (\n        <Fragment>\n            <h1>Edit administrator Profile</h1>\n            <p>\n                Edit your information.\n        </p>\n            <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} size=\"large\" spinning={loading}>\n                <Form form={form} onFinish={onFinish}>\n                    <Form.Item name=\"email\" rules={[{ required: true, message: 'Please input email!' }]}>\n                        <Input\n                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"your email\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input name!' }]}>\n                        <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"your name\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input your Password!' }]}>\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"password2\" rules={[{ required: true, message: 'Please input your Password!' }]}>\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Edit your information\n                </Button><br></br><br></br>\n                    <Popconfirm title=\"Are you sure that you want to delete your account?\"\n                        okText=\"Yes\" cancelText=\"No\" onConfirm={onConfirm} okType=\"danger\"\n                        icon={<QuestionCircleOutlined style={{ color: 'red' }}></QuestionCircleOutlined>} >\n                        <Button type=\"primary\" danger>\n                            Delete your account\n                    </Button>\n                    </Popconfirm>\n                </Form>\n            </Spin>\n        </Fragment>\n    )\n\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.user,\n    loading: state.auth.loading\n})\n\nexport default connect(mapStateToProps, { deleteAdmin, editAdmin })(AdminProfile);","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteTutor, editTutor } from '../../actions/adimnActions';\nimport { Form, Input, Button, Spin, Popconfirm } from 'antd';\nimport { LoadingOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { Icon } from '@ant-design/compatible';\nimport { useHistory, useParams } from 'react-router-dom';\n\n\nconst TutorProfile = ({ deleteTutor, editTutor, user, loading }) => {\n    const history = useHistory();\n    const [form] = Form.useForm();\n    let { id } = useParams();\n    let tutor;\n\n    useEffect(() => {\n        tutor = user\n\n        if (tutor) {\n            form.setFieldsValue({\n                email: tutor.email,\n                name: tutor.name\n            });\n        }\n    });\n\n    const onFinish = values => {\n        const { email, name } = values;\n        tutor = {\n            ...tutor,\n            email,\n            name\n        }\n        editTutor(tutor, history, '/dashboard');\n    }\n\n    const onConfirm = () => {\n        deleteTutor(id, history, '/');\n    }\n\n    return (\n        <Fragment>\n            <h1>Edit Tutor Profile</h1>\n            <p>\n                Edit your information.\n        </p>\n            <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} size=\"large\" spinning={loading}>\n                <Form form={form} onFinish={onFinish}>\n                    <Form.Item name=\"email\" rules={[{ required: true, message: 'Please input email!' }]}>\n                        <Input\n                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"your email\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input name!' }]}>\n                        <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"your name\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input your Password!' }]}>\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"password2\" rules={[{ required: true, message: 'Please input your Password!' }]}>\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Edit your information\n                </Button><br></br><br></br>\n                    <Popconfirm title=\"Are you sure that you want to delete your account?\"\n                        okText=\"Yes\" cancelText=\"No\" onConfirm={onConfirm} okType=\"danger\"\n                        icon={<QuestionCircleOutlined style={{ color: 'red' }}></QuestionCircleOutlined>} >\n                        <Button type=\"primary\" danger>\n                            Delete your account\n                    </Button>\n                    </Popconfirm>\n                </Form>\n            </Spin>\n        </Fragment>\n    )\n\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.user,\n    loading: state.auth.loading\n})\n\nexport default connect(mapStateToProps, { deleteTutor, editTutor })(TutorProfile);","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteStudent, editStudent } from '../../actions/adimnActions';\nimport { Form, Input, Button, Spin, Popconfirm } from 'antd';\nimport { LoadingOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { Icon } from '@ant-design/compatible';\nimport { useHistory, useParams } from 'react-router-dom';\n\n\nconst StudentProfile = ({ deleteStudent, editStudent, user, loading }) => {\n    const history = useHistory();\n    const [form] = Form.useForm();\n    let { id } = useParams();\n    let student;\n\n    useEffect(() => {\n        student = user\n\n        if (student) {\n            form.setFieldsValue({\n                email: student.email,\n                name: student.name\n            });\n        }\n    });\n\n    const onFinish = values => {\n        const { email, name } = values;\n        student = {\n            ...student,\n            email,\n            name\n        }\n        editStudent(student, history, '/dashboard');\n    }\n\n    const onConfirm = () => {\n        deleteStudent(id, history, '/');\n    }\n\n    return (\n        <Fragment>\n            <h1>Edit Student Profile</h1>\n            <p>\n                Edit your information.\n        </p>\n            <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />} size=\"large\" spinning={loading}>\n                <Form form={form} onFinish={onFinish}>\n                    <Form.Item name=\"email\" rules={[{ required: true, message: 'Please input email!' }]}>\n                        <Input\n                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"your email\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input name!' }]}>\n                        <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"your name\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input your Password!' }]}>\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item name=\"password2\" rules={[{ required: true, message: 'Please input your Password!' }]}>\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Edit your information\n                </Button><br></br><br></br>\n                    <Popconfirm title=\"Are you sure that you want to delete your account?\"\n                        okText=\"Yes\" cancelText=\"No\" onConfirm={onConfirm} okType=\"danger\"\n                        icon={<QuestionCircleOutlined style={{ color: 'red' }}></QuestionCircleOutlined>} >\n                        <Button type=\"primary\" danger>\n                            Delete your account\n                    </Button>\n                    </Popconfirm>\n                </Form>\n            </Spin>\n        </Fragment>\n    )\n\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.user,\n    loading: state.auth.loading\n})\n\nexport default connect(mapStateToProps, { deleteStudent, editStudent })(StudentProfile);","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport ErrorNotFound from '../ErrotNotFound';\nimport AdminProfile from './AdminProfile';\nimport TutorProfile from './TutorProfile';\nimport StudentProfile from './StudentProfile';\n\nconst MyProfile = ({ user }) => {\n    let page = null;\n    switch (user.kind) {\n        case 'Administrator':\n            page = <AdminProfile />\n            break;\n        case 'Tutor':\n            page = <TutorProfile />\n            break;\n        case 'Student':\n            page = <StudentProfile />\n            break;\n        default:\n            page = <ErrorNotFound />\n\n    }\n    return (\n        <Fragment>\n            {page}\n        </Fragment>\n    )\n\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.user\n})\n\nexport default connect(mapStateToProps)(MyProfile);","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../auth/Login';\r\nimport AlertWrapper from '../layout/Alert';\r\nimport RegisterTutor from '../auth/RegisterTutor';\r\nimport RegisterStudent from '../auth/RegisterStudent';\r\nimport ErrorNotFound from '../ErrotNotFound';\r\nimport { Skeleton } from 'antd';\r\nimport MainDashboard from '../dashboard/MainDashboard';\r\nimport Classroom from '../classroom/Classroom';\r\nimport TutorClassroom from '../classroom/TutorClassroom';\r\nimport LoginAsGuest from '../auth/LoginAsGuest';\r\nimport Home from '../Home';\r\nimport Profile from '../layout/Profile';\r\n\r\nconst Routes = ({ auth }) => {\r\n    let privateRoutes = auth.loading ? null :\r\n        <Route path='/dashboard' render={(props) => <MainDashboard {...props} userKind={auth.user.kind} />} />\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton active loading={auth.loading && auth.user !== null}>\r\n                <AlertWrapper />\r\n\r\n                <Switch>\r\n                    <Route path='/myProfile' component={Profile} />\r\n                    <Route path='/register/tutor' component={RegisterTutor} />\r\n                    <Route path='/register/student' component={RegisterStudent} />\r\n                    <Route path='/login/guest' component={LoginAsGuest} />\r\n                    <Route path='/login' component={Login} />\r\n                    <Route path='/classroom/:id/tutor' component={TutorClassroom} />\r\n                    <Route exact path='/classroom/:id/' component={Classroom} />\r\n                    {privateRoutes}\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route component={ErrorNotFound} />\r\n                </Switch>\r\n            </Skeleton>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(Routes);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    const {type, payload} = action;\n\n    switch (type) {\n        case SET_ALERT:\n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n}\n","import {\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    REGISTER_FAIL,\n    REGISTER_SUCCESS\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    loading: true,\n    user: null\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            };\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                ...payload\n            };\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            };\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n        case REGISTER_FAIL:\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null\n            };\n        default:\n            return state;\n    }\n}\n","import {\n    GET_TUTORS,\n    GET_STUDENTS,\n    EDIT_TUTOR,\n    EDIT_STUDENT,\n    EDIT_TUTOR_SUCCESS,\n    EDIT_TUTOR_FAIL,\n    EDIT_STUDENT_SUCCESS,\n    EDIT_STUDENT_FAIL,\n    ADD_CLASSROOM,\n    GET_CLASSROOMS,\n    EDIT_CLASSROOM_SUCCESS,\n    EDIT_CLASSROOM_FAIL,\n    DELETE_CLASSROOM_FAIL,\n    DELETE_CLASSROOM,\n    EDIT_CLASSROOM,\n    DELETE_STUDENT,\n    DELETE_TUTOR,\n    DELETE_TUTOR_FAIL,\n    DELETE_STUDENT_FAIL,\n    DELETE_CLASSROOM_SUCCESS,\n    DELETE_STUDENT_SUCCESS,\n    DELETE_TUTOR_SUCCESS,\n    DELETE_ADMIN_FAIL,\n    EDIT_ADMIN_FAIL,\n    DELETE_ADMIN_SUCCESS,\n    EDIT_ADMIN_SUCCESS,\n    DELETE_ADMIN,\n    EDIT_ADMIN\n} from '../actions/types';\n\nconst initialState = {\n    loading: true,\n    tutors: [],\n    students: [],\n    classrooms: []\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_TUTORS:\n            return {\n                loading: false,\n                tutors: action.payload\n            }\n        case GET_STUDENTS:\n            return {\n                loading: false,\n                students: action.payload\n            }\n        case EDIT_TUTOR:\n        case EDIT_STUDENT:\n        case EDIT_CLASSROOM:\n        case DELETE_CLASSROOM:\n        case DELETE_STUDENT:\n        case DELETE_TUTOR:\n        case DELETE_ADMIN:\n        case EDIT_ADMIN:\n            return {\n                ...state,\n                loading: true\n            }\n        case EDIT_TUTOR_SUCCESS:\n            return {\n                loading: false,\n                tutors: action.payload\n            }\n        case EDIT_STUDENT_SUCCESS:\n            return {\n                loading: false,\n                students: action.payload\n            }\n        case EDIT_CLASSROOM_SUCCESS:\n            return {\n                loading: false,\n                classrooms: action.payload\n            }\n        case DELETE_TUTOR_SUCCESS:\n            return {\n                loading: false,\n                tutors: action.payload\n            }\n        case DELETE_STUDENT_SUCCESS:\n            return {\n                loading: false,\n                students: action.payload\n            }\n        case DELETE_CLASSROOM_SUCCESS:\n            return {\n                loading: false,\n                classrooms: action.payload\n            }\n        case DELETE_STUDENT_FAIL:\n        case DELETE_TUTOR_FAIL:\n        case DELETE_CLASSROOM_FAIL:\n        case DELETE_ADMIN_FAIL:\n        case EDIT_TUTOR_FAIL:\n        case EDIT_STUDENT_FAIL:\n        case EDIT_CLASSROOM_FAIL:\n        case EDIT_ADMIN_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n        case GET_CLASSROOMS:\n            return {\n                loading: false,\n                classrooms: action.payload\n            }\n        case ADD_CLASSROOM:\n            return {\n                loading: true,\n                classrooms: [...state.classrooms, action.payload]\n            }\n        case DELETE_ADMIN_SUCCESS:\n        case EDIT_ADMIN_SUCCESS:\n            return {\n                loading: false\n            }\n        default:\n            return initialState;\n    }\n}","import {\n    RECEIVE_MESSAGE,\n    ADD_MESSAGE,\n    SEND_MESSAGE,\n    USER_LEFT,\n    GET_MESSAGES,\n    USER_JOINED,\n    SET_MESSAGES,\n    JOIN_CLASSROOM,\n    JOIN_CLASSROOM_FAIL,\n    JOIN_CLASSROOM_SUCCESS,\n    START_LECTURE,\n    STOP_LECTURE,\n    LOAD_LECTURE,\n    GET_PUBLISH_TOKEN,\n    GET_PLAY_TOKEN,\n    ALLOW_USER_STREAM,\n    RECEIVE_SLIDE,\n    CHANGE_SLIDE_PAGE,\n    CHANGE_CURRENT_REPLAY\n} from '../actions/types';\n\nconst initState = {\n    loading: true,\n    messages: [],\n    lectureStarted: false,\n    onlineUsers: [],\n    publishToken: '',\n    playToken: '',\n    currentStreamerId: '',\n    slideUrl: '',\n    slidePage: 1,\n    currentReplayUrl: ''\n}\n\nexport default function (state = initState, action) {\n    const {\n        type,\n        payload\n    } = action;\n    switch (type) {\n        case ADD_MESSAGE:\n            return {\n                ...state,\n                messages: [...state.messages, payload]\n            }\n        case RECEIVE_SLIDE:\n            return {\n                ...state,\n                slideUrl: payload\n            }\n        case CHANGE_SLIDE_PAGE:\n            return {\n                ...state,\n                slidePage: payload\n            }\n        case START_LECTURE:\n            return {\n                ...state,\n                lectureStarted: true\n            }\n        case STOP_LECTURE:\n            return {\n                ...initState\n            };\n        case GET_MESSAGES:\n            return {\n                ...state,\n                messages: payload.data,\n                loading: false\n            }\n        case LOAD_LECTURE:\n            return {\n                ...state,\n                lectureStarted: payload.hasStarted,\n                onlineUsers: payload.onlineUsers, \n                slideUrl: payload.slideUrl,\n                slidesPage: payload.slidesPage\n            }\n        case USER_JOINED:\n            if (!state.onlineUsers.find(u => u._id === payload._id)) {\n                return {\n                    ...state,\n                    onlineUsers: [...state.onlineUsers, payload]\n                }\n            } else {\n                return state;\n            }\n        case USER_LEFT:\n            let users = state.onlineUsers.filter(u => u._id !== payload._id);\n            return {\n                ...state,\n                onlineUsers: users\n            }\n        case GET_PUBLISH_TOKEN:\n            return {\n                ...state,\n                publishToken: payload.publishToken,\n                currentStreamerId: payload.currentStreamerId\n            }\n        case GET_PLAY_TOKEN:\n            return {\n                ...state,\n                playToken: payload\n            }\n        case ALLOW_USER_STREAM:\n            return {\n                ...state,\n                currentStreamerId: payload.currentStreamerId\n            }\n        case CHANGE_CURRENT_REPLAY:\n            return {\n                ...state,\n                currentReplayUrl: payload\n            }\n        case SEND_MESSAGE:\n        default:\n            return state;\n    }\n}","import {\r\n    CONNECTION_SUCCESS,\r\n    CONNECTION_CLOSE,\r\n    START_SHARING,\r\n    START_SHARING_SUCCESS,\r\n    START_SHARING_FAIL,\r\n    STOP_SHARING,\r\n    TOGGLE_MIC\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    // currentStreamUrl: \"\",\r\n    // currentStreamerId: \"\",\r\n    isSharing: false,\r\n    webrtcConnected: false,\r\n    micMuted: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const {\r\n        payload,\r\n        type\r\n    } = action;\r\n\r\n    switch (type) {\r\n        case CONNECTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                webrtcConnected: true\r\n            }\r\n            case CONNECTION_CLOSE:\r\n                return {\r\n                    ...state,\r\n                    webrtcConnected: false,\r\n                        isSharing: false\r\n                }\r\n                case START_SHARING:\r\n                    return {\r\n                        ...state,\r\n                        loading: true,\r\n                    }\r\n                    case START_SHARING_SUCCESS:\r\n                        return {\r\n                            ...state,\r\n                            loading: false,\r\n                                isSharing: true\r\n                        }\r\n                        case START_SHARING_FAIL:\r\n                            return {\r\n                                ...state,\r\n                                loading: false,\r\n                                    isSharing: false\r\n                            }\r\n                            case STOP_SHARING:\r\n                                return {\r\n                                    ...state,\r\n                                    loading: false,\r\n                                        isSharing: false\r\n                                }\r\n                                case TOGGLE_MIC:\r\n                                    return {\r\n                                        ...state,\r\n                                        micMuted: !state.micMuted\r\n                                    }\r\n                                    default:\r\n                                        return state;\r\n    }\r\n}","import {\n    GET_TUTOR_LECTURES,\n    GET_TUTOR_CLASSROOMS,\n    ADD_STUDENT_TO_CLASSROOM,\n    DELETE_STUDENT_FROM_CLASSROOM,\n    GET_STUDENT_CLASSROOMS,\n    ADD_STUDENT_TO_CLASSROOM_SUCCESS,\n    GET_STUDENTS_OF_CLASSROOM_SUCCESS,\n    DELETE_STUDENT_FROM_CLASSROOM_SUCCESS,\n    GET_STUDENTS_OF_CLASSROOM_FAIL,\n    ADD_STUDENT_TO_CLASSROOM_FAIL,\n    DELETE_STUDENT_FROM_CLASSROOM_FAIL\n} from '../actions/types';\n\nconst initialState = {\n    loading: true,\n    lectures: [],\n    classrooms: [],\n    students: []\n};\n\nexport default function (state = initialState, action) {\n    const { payload, type } = action;\n    switch (type) {\n        case GET_TUTOR_LECTURES:\n            return {\n                loading: false,\n                lectures: payload,\n                classrooms: [],\n                students: []\n            }\n        case GET_TUTOR_CLASSROOMS:\n            return {\n                loading: false,\n                lectures: [],\n                classrooms: payload,\n                students: []\n            }\n        case ADD_STUDENT_TO_CLASSROOM:\n        case DELETE_STUDENT_FROM_CLASSROOM:\n        case GET_STUDENT_CLASSROOMS:\n            return {\n                ...state\n            }\n        case ADD_STUDENT_TO_CLASSROOM_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                students: [...state.students, payload]\n            }\n        case GET_STUDENTS_OF_CLASSROOM_SUCCESS:\n        case DELETE_STUDENT_FROM_CLASSROOM_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                students: payload\n            }\n        case GET_STUDENTS_OF_CLASSROOM_FAIL:\n        case ADD_STUDENT_TO_CLASSROOM_FAIL:\n        case DELETE_STUDENT_FROM_CLASSROOM_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n        default:\n            return initialState;\n    }\n}","import {\n    GET_STUDENT_LECTURES,\n    GET_STUDENT_CLASSROOMS\n} from '../actions/types';\n\nconst initialState = {\n    loading: true,\n    lectures: [],\n    classrooms: []\n};\n\nexport default function (state = initialState, action) {\n    const { payload, type } = action;\n    switch (type) {\n        case GET_STUDENT_LECTURES:\n            return {\n                loading: false,\n                lectures: payload,\n                classrooms: []\n            }\n        case GET_STUDENT_CLASSROOMS:\n            return {\n                loading: false,\n                lectures: [],\n                classrooms: payload\n            }\n        default:\n            return initialState;\n    }\n}","import {\n    combineReducers\n} from 'redux';\n\nimport alert from './alert';\nimport auth from './auth';\nimport admin from './adminReducer';\nimport lecture from './lecture';\nimport stream from './stream';\nimport tutor from './tutorReducer';\nimport student from './studentReducer';\n\nexport default combineReducers({\n    alert,\n    auth,\n    admin,\n    tutor,\n    student,\n    lecture,\n    stream\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport setAuthToken from './utils/setAuthToken';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n// set up a store subscription listener\n// to store the users token in localStorage\n\n// prevent auth error on first run of subscription\nlet currentState = {\n  auth: { token: null, isAuthenticated: null, loading: true, user: null }\n};\n\nstore.subscribe(() => {\n  // keep track of the previous and current state to compare changes\n  let previousState = currentState;\n  currentState = store.getState();\n  // if the token changes set the value in localStorage and axios headers\n  if (previousState.auth.token !== currentState.auth.token) {\n    const token = currentState.auth.token;\n    setAuthToken(token);\n  }\n});\n\nexport default store;","import React, { Fragment } from 'react';\nimport { Icon as LegacyIcon } from '@ant-design/compatible';\nimport { Menu, Dropdown, Avatar } from 'antd';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/auth';\nimport Logo from '../../default-monochrome.svg';\nimport { Link, useHistory } from 'react-router-dom';\nimport {LogoutOutlined, IdcardOutlined} from '@ant-design/icons';\n\nconst Navbar = ({ isAuthenticated, user, logout }) => {\n    const history = useHistory();\n    let welcome;\n    const onClick = () => {\n        logout(history, '');\n    }\n\n    const menu = (\n        <Fragment>\n            <Menu>\n                <Menu.Item >\n                    <IdcardOutlined />\n                    My profile\n                    <Link to=\"/myProfile\"></Link>\n                </Menu.Item>\n                <Menu.Item onClick={onClick} >\n                    <LogoutOutlined />\n                    Log out\n                </Menu.Item>\n            </Menu>\n        </Fragment>\n    );\n\n    if (isAuthenticated && user) {\n        welcome =\n            <>\n                <div className=\"welcome-username\">\n                    <Avatar icon={<LegacyIcon type=\"user\" />} size=\"large\" />\n                    <Dropdown overlay={menu}>\n                        <span>Welcome, {user.name}! <LegacyIcon type=\"down\" /></span>\n                    </Dropdown>\n                </div>\n            </>\n    }\n\n    return (\n        <>\n            <Link to=\"\"><img src={Logo} alt=\"\" className=\"logo-placeholder\"></img></Link>\n            {/* // <Menu\n        //     theme=\"dark\"\n        //     mode=\"horizontal\"\n        //     defaultSelectedKeys={['2']}\n        //     style={{ lineHeight: '64px' }}\n        // >\n        // </Menu> */}\n            {welcome}\n        </>\n    )\n}\n\nNavbar.propTypes = {\n    isAuthenticated: PropTypes.bool,\n    name: PropTypes.string,\n    logout: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Routes from './components/routing/Routes';\n\n// Redux imports\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\n// import logo from './logo.svg';\nimport './App.css';\n\nimport Navbar from \"./components/layout/Navbar\";\nimport { Layout } from \"antd\";\nimport ContactUs from './components/layout/ContactUs';\nconst { Header, Footer } = Layout;\n\nfunction App() {\n  useEffect(() => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n      store.dispatch(loadUser());\n    }\n  }, []);\n\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Layout style={{minHeight: '100vh'}}>\n            <Header style={{ height: '130px' }}>\n              <Navbar />\n            </Header>\n            <Layout>\n              <Switch>\n                {/* <Route exact path=\"/\" component={Landing} /> */}\n                <Route component={Routes} />\n              </Switch>\n            </Layout>\n            <Footer>\n              Swift Course - A Fast and Affordable Online Classroom System\n            </Footer>\n          </Layout>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}